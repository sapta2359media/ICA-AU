/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 143.0, "minX": 0.0, "maxY": 15257.0, "series": [{"data": [[0.0, 185.0], [0.1, 198.0], [0.2, 199.0], [0.3, 199.0], [0.4, 200.0], [0.5, 201.0], [0.6, 201.0], [0.7, 201.0], [0.8, 201.0], [0.9, 202.0], [1.0, 202.0], [1.1, 202.0], [1.2, 202.0], [1.3, 203.0], [1.4, 203.0], [1.5, 203.0], [1.6, 203.0], [1.7, 203.0], [1.8, 203.0], [1.9, 203.0], [2.0, 203.0], [2.1, 204.0], [2.2, 204.0], [2.3, 204.0], [2.4, 204.0], [2.5, 204.0], [2.6, 205.0], [2.7, 205.0], [2.8, 205.0], [2.9, 205.0], [3.0, 205.0], [3.1, 205.0], [3.2, 205.0], [3.3, 205.0], [3.4, 205.0], [3.5, 206.0], [3.6, 206.0], [3.7, 206.0], [3.8, 206.0], [3.9, 207.0], [4.0, 207.0], [4.1, 207.0], [4.2, 207.0], [4.3, 207.0], [4.4, 207.0], [4.5, 207.0], [4.6, 207.0], [4.7, 207.0], [4.8, 207.0], [4.9, 207.0], [5.0, 208.0], [5.1, 208.0], [5.2, 208.0], [5.3, 208.0], [5.4, 208.0], [5.5, 208.0], [5.6, 209.0], [5.7, 209.0], [5.8, 209.0], [5.9, 210.0], [6.0, 210.0], [6.1, 210.0], [6.2, 210.0], [6.3, 210.0], [6.4, 210.0], [6.5, 210.0], [6.6, 210.0], [6.7, 211.0], [6.8, 211.0], [6.9, 211.0], [7.0, 211.0], [7.1, 211.0], [7.2, 211.0], [7.3, 211.0], [7.4, 211.0], [7.5, 211.0], [7.6, 211.0], [7.7, 212.0], [7.8, 212.0], [7.9, 212.0], [8.0, 212.0], [8.1, 212.0], [8.2, 212.0], [8.3, 212.0], [8.4, 212.0], [8.5, 212.0], [8.6, 212.0], [8.7, 212.0], [8.8, 212.0], [8.9, 212.0], [9.0, 212.0], [9.1, 212.0], [9.2, 213.0], [9.3, 213.0], [9.4, 213.0], [9.5, 213.0], [9.6, 213.0], [9.7, 213.0], [9.8, 213.0], [9.9, 213.0], [10.0, 213.0], [10.1, 213.0], [10.2, 213.0], [10.3, 214.0], [10.4, 214.0], [10.5, 214.0], [10.6, 214.0], [10.7, 214.0], [10.8, 214.0], [10.9, 214.0], [11.0, 214.0], [11.1, 214.0], [11.2, 214.0], [11.3, 214.0], [11.4, 214.0], [11.5, 215.0], [11.6, 215.0], [11.7, 215.0], [11.8, 216.0], [11.9, 216.0], [12.0, 216.0], [12.1, 216.0], [12.2, 216.0], [12.3, 216.0], [12.4, 216.0], [12.5, 216.0], [12.6, 216.0], [12.7, 216.0], [12.8, 217.0], [12.9, 217.0], [13.0, 217.0], [13.1, 217.0], [13.2, 217.0], [13.3, 217.0], [13.4, 217.0], [13.5, 217.0], [13.6, 217.0], [13.7, 217.0], [13.8, 217.0], [13.9, 218.0], [14.0, 218.0], [14.1, 218.0], [14.2, 218.0], [14.3, 218.0], [14.4, 218.0], [14.5, 219.0], [14.6, 219.0], [14.7, 219.0], [14.8, 219.0], [14.9, 219.0], [15.0, 219.0], [15.1, 219.0], [15.2, 219.0], [15.3, 219.0], [15.4, 220.0], [15.5, 220.0], [15.6, 220.0], [15.7, 220.0], [15.8, 221.0], [15.9, 221.0], [16.0, 221.0], [16.1, 221.0], [16.2, 221.0], [16.3, 221.0], [16.4, 221.0], [16.5, 221.0], [16.6, 221.0], [16.7, 222.0], [16.8, 222.0], [16.9, 222.0], [17.0, 222.0], [17.1, 222.0], [17.2, 222.0], [17.3, 222.0], [17.4, 222.0], [17.5, 222.0], [17.6, 223.0], [17.7, 223.0], [17.8, 223.0], [17.9, 223.0], [18.0, 223.0], [18.1, 223.0], [18.2, 223.0], [18.3, 224.0], [18.4, 224.0], [18.5, 224.0], [18.6, 224.0], [18.7, 224.0], [18.8, 224.0], [18.9, 224.0], [19.0, 224.0], [19.1, 224.0], [19.2, 224.0], [19.3, 224.0], [19.4, 224.0], [19.5, 225.0], [19.6, 225.0], [19.7, 225.0], [19.8, 225.0], [19.9, 225.0], [20.0, 225.0], [20.1, 225.0], [20.2, 225.0], [20.3, 226.0], [20.4, 226.0], [20.5, 226.0], [20.6, 226.0], [20.7, 226.0], [20.8, 226.0], [20.9, 226.0], [21.0, 227.0], [21.1, 227.0], [21.2, 227.0], [21.3, 227.0], [21.4, 227.0], [21.5, 227.0], [21.6, 227.0], [21.7, 227.0], [21.8, 227.0], [21.9, 227.0], [22.0, 227.0], [22.1, 228.0], [22.2, 228.0], [22.3, 228.0], [22.4, 228.0], [22.5, 228.0], [22.6, 228.0], [22.7, 228.0], [22.8, 228.0], [22.9, 228.0], [23.0, 229.0], [23.1, 229.0], [23.2, 229.0], [23.3, 229.0], [23.4, 229.0], [23.5, 229.0], [23.6, 229.0], [23.7, 229.0], [23.8, 229.0], [23.9, 229.0], [24.0, 230.0], [24.1, 230.0], [24.2, 230.0], [24.3, 230.0], [24.4, 230.0], [24.5, 230.0], [24.6, 230.0], [24.7, 230.0], [24.8, 230.0], [24.9, 231.0], [25.0, 231.0], [25.1, 231.0], [25.2, 231.0], [25.3, 231.0], [25.4, 231.0], [25.5, 231.0], [25.6, 232.0], [25.7, 232.0], [25.8, 232.0], [25.9, 232.0], [26.0, 232.0], [26.1, 233.0], [26.2, 233.0], [26.3, 233.0], [26.4, 233.0], [26.5, 233.0], [26.6, 233.0], [26.7, 233.0], [26.8, 233.0], [26.9, 233.0], [27.0, 233.0], [27.1, 233.0], [27.2, 234.0], [27.3, 234.0], [27.4, 234.0], [27.5, 234.0], [27.6, 234.0], [27.7, 234.0], [27.8, 234.0], [27.9, 234.0], [28.0, 234.0], [28.1, 235.0], [28.2, 235.0], [28.3, 235.0], [28.4, 235.0], [28.5, 235.0], [28.6, 236.0], [28.7, 236.0], [28.8, 237.0], [28.9, 237.0], [29.0, 237.0], [29.1, 237.0], [29.2, 237.0], [29.3, 238.0], [29.4, 239.0], [29.5, 239.0], [29.6, 239.0], [29.7, 239.0], [29.8, 239.0], [29.9, 239.0], [30.0, 239.0], [30.1, 239.0], [30.2, 239.0], [30.3, 240.0], [30.4, 240.0], [30.5, 240.0], [30.6, 240.0], [30.7, 240.0], [30.8, 241.0], [30.9, 241.0], [31.0, 241.0], [31.1, 241.0], [31.2, 241.0], [31.3, 241.0], [31.4, 241.0], [31.5, 242.0], [31.6, 242.0], [31.7, 242.0], [31.8, 242.0], [31.9, 242.0], [32.0, 242.0], [32.1, 242.0], [32.2, 243.0], [32.3, 243.0], [32.4, 243.0], [32.5, 243.0], [32.6, 243.0], [32.7, 243.0], [32.8, 243.0], [32.9, 244.0], [33.0, 244.0], [33.1, 244.0], [33.2, 244.0], [33.3, 244.0], [33.4, 244.0], [33.5, 245.0], [33.6, 245.0], [33.7, 245.0], [33.8, 245.0], [33.9, 245.0], [34.0, 245.0], [34.1, 246.0], [34.2, 246.0], [34.3, 246.0], [34.4, 246.0], [34.5, 246.0], [34.6, 246.0], [34.7, 247.0], [34.8, 247.0], [34.9, 247.0], [35.0, 247.0], [35.1, 248.0], [35.2, 248.0], [35.3, 248.0], [35.4, 248.0], [35.5, 248.0], [35.6, 249.0], [35.7, 249.0], [35.8, 249.0], [35.9, 249.0], [36.0, 249.0], [36.1, 250.0], [36.2, 250.0], [36.3, 250.0], [36.4, 250.0], [36.5, 251.0], [36.6, 251.0], [36.7, 251.0], [36.8, 251.0], [36.9, 251.0], [37.0, 252.0], [37.1, 252.0], [37.2, 252.0], [37.3, 252.0], [37.4, 252.0], [37.5, 253.0], [37.6, 253.0], [37.7, 253.0], [37.8, 253.0], [37.9, 253.0], [38.0, 254.0], [38.1, 254.0], [38.2, 254.0], [38.3, 254.0], [38.4, 254.0], [38.5, 255.0], [38.6, 255.0], [38.7, 255.0], [38.8, 256.0], [38.9, 256.0], [39.0, 256.0], [39.1, 256.0], [39.2, 256.0], [39.3, 256.0], [39.4, 256.0], [39.5, 256.0], [39.6, 257.0], [39.7, 257.0], [39.8, 257.0], [39.9, 257.0], [40.0, 258.0], [40.1, 258.0], [40.2, 258.0], [40.3, 258.0], [40.4, 258.0], [40.5, 259.0], [40.6, 259.0], [40.7, 259.0], [40.8, 259.0], [40.9, 259.0], [41.0, 260.0], [41.1, 260.0], [41.2, 260.0], [41.3, 261.0], [41.4, 261.0], [41.5, 261.0], [41.6, 261.0], [41.7, 261.0], [41.8, 261.0], [41.9, 261.0], [42.0, 262.0], [42.1, 262.0], [42.2, 262.0], [42.3, 262.0], [42.4, 262.0], [42.5, 262.0], [42.6, 263.0], [42.7, 264.0], [42.8, 264.0], [42.9, 264.0], [43.0, 264.0], [43.1, 264.0], [43.2, 265.0], [43.3, 265.0], [43.4, 265.0], [43.5, 265.0], [43.6, 265.0], [43.7, 265.0], [43.8, 265.0], [43.9, 266.0], [44.0, 266.0], [44.1, 266.0], [44.2, 266.0], [44.3, 266.0], [44.4, 266.0], [44.5, 267.0], [44.6, 267.0], [44.7, 267.0], [44.8, 267.0], [44.9, 267.0], [45.0, 267.0], [45.1, 267.0], [45.2, 268.0], [45.3, 268.0], [45.4, 268.0], [45.5, 268.0], [45.6, 268.0], [45.7, 269.0], [45.8, 269.0], [45.9, 269.0], [46.0, 269.0], [46.1, 269.0], [46.2, 270.0], [46.3, 270.0], [46.4, 270.0], [46.5, 270.0], [46.6, 271.0], [46.7, 271.0], [46.8, 271.0], [46.9, 271.0], [47.0, 272.0], [47.1, 272.0], [47.2, 272.0], [47.3, 272.0], [47.4, 272.0], [47.5, 273.0], [47.6, 273.0], [47.7, 273.0], [47.8, 273.0], [47.9, 274.0], [48.0, 274.0], [48.1, 274.0], [48.2, 274.0], [48.3, 274.0], [48.4, 274.0], [48.5, 274.0], [48.6, 274.0], [48.7, 274.0], [48.8, 274.0], [48.9, 275.0], [49.0, 275.0], [49.1, 275.0], [49.2, 276.0], [49.3, 276.0], [49.4, 276.0], [49.5, 276.0], [49.6, 276.0], [49.7, 276.0], [49.8, 277.0], [49.9, 277.0], [50.0, 277.0], [50.1, 278.0], [50.2, 278.0], [50.3, 278.0], [50.4, 278.0], [50.5, 278.0], [50.6, 279.0], [50.7, 279.0], [50.8, 279.0], [50.9, 279.0], [51.0, 279.0], [51.1, 279.0], [51.2, 279.0], [51.3, 279.0], [51.4, 280.0], [51.5, 280.0], [51.6, 280.0], [51.7, 280.0], [51.8, 280.0], [51.9, 281.0], [52.0, 281.0], [52.1, 281.0], [52.2, 281.0], [52.3, 281.0], [52.4, 281.0], [52.5, 282.0], [52.6, 282.0], [52.7, 282.0], [52.8, 282.0], [52.9, 283.0], [53.0, 283.0], [53.1, 283.0], [53.2, 283.0], [53.3, 283.0], [53.4, 283.0], [53.5, 283.0], [53.6, 284.0], [53.7, 284.0], [53.8, 284.0], [53.9, 284.0], [54.0, 284.0], [54.1, 284.0], [54.2, 284.0], [54.3, 284.0], [54.4, 285.0], [54.5, 285.0], [54.6, 285.0], [54.7, 286.0], [54.8, 286.0], [54.9, 286.0], [55.0, 286.0], [55.1, 286.0], [55.2, 287.0], [55.3, 287.0], [55.4, 287.0], [55.5, 287.0], [55.6, 287.0], [55.7, 287.0], [55.8, 288.0], [55.9, 288.0], [56.0, 288.0], [56.1, 288.0], [56.2, 288.0], [56.3, 288.0], [56.4, 288.0], [56.5, 289.0], [56.6, 289.0], [56.7, 289.0], [56.8, 289.0], [56.9, 289.0], [57.0, 289.0], [57.1, 290.0], [57.2, 290.0], [57.3, 290.0], [57.4, 290.0], [57.5, 290.0], [57.6, 291.0], [57.7, 291.0], [57.8, 291.0], [57.9, 291.0], [58.0, 291.0], [58.1, 291.0], [58.2, 292.0], [58.3, 292.0], [58.4, 292.0], [58.5, 292.0], [58.6, 292.0], [58.7, 292.0], [58.8, 292.0], [58.9, 292.0], [59.0, 293.0], [59.1, 293.0], [59.2, 293.0], [59.3, 293.0], [59.4, 293.0], [59.5, 293.0], [59.6, 293.0], [59.7, 293.0], [59.8, 294.0], [59.9, 294.0], [60.0, 294.0], [60.1, 294.0], [60.2, 294.0], [60.3, 294.0], [60.4, 295.0], [60.5, 295.0], [60.6, 295.0], [60.7, 295.0], [60.8, 295.0], [60.9, 295.0], [61.0, 295.0], [61.1, 296.0], [61.2, 296.0], [61.3, 296.0], [61.4, 296.0], [61.5, 296.0], [61.6, 296.0], [61.7, 297.0], [61.8, 297.0], [61.9, 297.0], [62.0, 297.0], [62.1, 297.0], [62.2, 297.0], [62.3, 297.0], [62.4, 297.0], [62.5, 297.0], [62.6, 297.0], [62.7, 297.0], [62.8, 297.0], [62.9, 298.0], [63.0, 298.0], [63.1, 298.0], [63.2, 298.0], [63.3, 298.0], [63.4, 298.0], [63.5, 298.0], [63.6, 299.0], [63.7, 299.0], [63.8, 299.0], [63.9, 299.0], [64.0, 299.0], [64.1, 299.0], [64.2, 300.0], [64.3, 300.0], [64.4, 300.0], [64.5, 300.0], [64.6, 300.0], [64.7, 300.0], [64.8, 300.0], [64.9, 300.0], [65.0, 300.0], [65.1, 300.0], [65.2, 300.0], [65.3, 300.0], [65.4, 300.0], [65.5, 300.0], [65.6, 300.0], [65.7, 300.0], [65.8, 300.0], [65.9, 300.0], [66.0, 301.0], [66.1, 301.0], [66.2, 301.0], [66.3, 301.0], [66.4, 301.0], [66.5, 301.0], [66.6, 301.0], [66.7, 301.0], [66.8, 301.0], [66.9, 301.0], [67.0, 301.0], [67.1, 301.0], [67.2, 301.0], [67.3, 301.0], [67.4, 301.0], [67.5, 301.0], [67.6, 301.0], [67.7, 301.0], [67.8, 301.0], [67.9, 302.0], [68.0, 302.0], [68.1, 302.0], [68.2, 302.0], [68.3, 302.0], [68.4, 302.0], [68.5, 302.0], [68.6, 302.0], [68.7, 302.0], [68.8, 302.0], [68.9, 302.0], [69.0, 302.0], [69.1, 302.0], [69.2, 302.0], [69.3, 302.0], [69.4, 302.0], [69.5, 302.0], [69.6, 302.0], [69.7, 302.0], [69.8, 302.0], [69.9, 302.0], [70.0, 302.0], [70.1, 302.0], [70.2, 302.0], [70.3, 302.0], [70.4, 303.0], [70.5, 303.0], [70.6, 303.0], [70.7, 303.0], [70.8, 303.0], [70.9, 303.0], [71.0, 303.0], [71.1, 303.0], [71.2, 303.0], [71.3, 303.0], [71.4, 303.0], [71.5, 303.0], [71.6, 303.0], [71.7, 303.0], [71.8, 303.0], [71.9, 303.0], [72.0, 303.0], [72.1, 303.0], [72.2, 303.0], [72.3, 303.0], [72.4, 304.0], [72.5, 304.0], [72.6, 304.0], [72.7, 304.0], [72.8, 304.0], [72.9, 304.0], [73.0, 304.0], [73.1, 304.0], [73.2, 304.0], [73.3, 304.0], [73.4, 304.0], [73.5, 304.0], [73.6, 304.0], [73.7, 304.0], [73.8, 304.0], [73.9, 304.0], [74.0, 304.0], [74.1, 304.0], [74.2, 304.0], [74.3, 304.0], [74.4, 304.0], [74.5, 304.0], [74.6, 304.0], [74.7, 304.0], [74.8, 304.0], [74.9, 304.0], [75.0, 304.0], [75.1, 304.0], [75.2, 304.0], [75.3, 304.0], [75.4, 304.0], [75.5, 304.0], [75.6, 304.0], [75.7, 305.0], [75.8, 305.0], [75.9, 305.0], [76.0, 305.0], [76.1, 305.0], [76.2, 305.0], [76.3, 305.0], [76.4, 305.0], [76.5, 305.0], [76.6, 305.0], [76.7, 305.0], [76.8, 305.0], [76.9, 305.0], [77.0, 305.0], [77.1, 305.0], [77.2, 305.0], [77.3, 305.0], [77.4, 305.0], [77.5, 305.0], [77.6, 305.0], [77.7, 305.0], [77.8, 306.0], [77.9, 306.0], [78.0, 306.0], [78.1, 306.0], [78.2, 306.0], [78.3, 306.0], [78.4, 306.0], [78.5, 306.0], [78.6, 306.0], [78.7, 306.0], [78.8, 306.0], [78.9, 306.0], [79.0, 306.0], [79.1, 306.0], [79.2, 306.0], [79.3, 307.0], [79.4, 307.0], [79.5, 307.0], [79.6, 307.0], [79.7, 307.0], [79.8, 307.0], [79.9, 307.0], [80.0, 308.0], [80.1, 308.0], [80.2, 308.0], [80.3, 308.0], [80.4, 308.0], [80.5, 309.0], [80.6, 309.0], [80.7, 309.0], [80.8, 309.0], [80.9, 310.0], [81.0, 310.0], [81.1, 310.0], [81.2, 311.0], [81.3, 311.0], [81.4, 311.0], [81.5, 311.0], [81.6, 312.0], [81.7, 313.0], [81.8, 313.0], [81.9, 314.0], [82.0, 314.0], [82.1, 314.0], [82.2, 317.0], [82.3, 317.0], [82.4, 317.0], [82.5, 317.0], [82.6, 317.0], [82.7, 319.0], [82.8, 319.0], [82.9, 319.0], [83.0, 319.0], [83.1, 319.0], [83.2, 320.0], [83.3, 320.0], [83.4, 322.0], [83.5, 323.0], [83.6, 323.0], [83.7, 323.0], [83.8, 324.0], [83.9, 325.0], [84.0, 326.0], [84.1, 326.0], [84.2, 326.0], [84.3, 326.0], [84.4, 327.0], [84.5, 328.0], [84.6, 329.0], [84.7, 329.0], [84.8, 330.0], [84.9, 330.0], [85.0, 331.0], [85.1, 331.0], [85.2, 333.0], [85.3, 333.0], [85.4, 334.0], [85.5, 338.0], [85.6, 342.0], [85.7, 342.0], [85.8, 343.0], [85.9, 343.0], [86.0, 343.0], [86.1, 343.0], [86.2, 344.0], [86.3, 346.0], [86.4, 346.0], [86.5, 347.0], [86.6, 347.0], [86.7, 349.0], [86.8, 350.0], [86.9, 352.0], [87.0, 352.0], [87.1, 352.0], [87.2, 352.0], [87.3, 352.0], [87.4, 354.0], [87.5, 358.0], [87.6, 360.0], [87.7, 361.0], [87.8, 363.0], [87.9, 363.0], [88.0, 363.0], [88.1, 363.0], [88.2, 365.0], [88.3, 365.0], [88.4, 370.0], [88.5, 371.0], [88.6, 373.0], [88.7, 375.0], [88.8, 376.0], [88.9, 377.0], [89.0, 379.0], [89.1, 382.0], [89.2, 384.0], [89.3, 387.0], [89.4, 388.0], [89.5, 389.0], [89.6, 389.0], [89.7, 390.0], [89.8, 390.0], [89.9, 394.0], [90.0, 394.0], [90.1, 399.0], [90.2, 400.0], [90.3, 402.0], [90.4, 404.0], [90.5, 404.0], [90.6, 404.0], [90.7, 406.0], [90.8, 406.0], [90.9, 407.0], [91.0, 408.0], [91.1, 410.0], [91.2, 411.0], [91.3, 412.0], [91.4, 415.0], [91.5, 415.0], [91.6, 415.0], [91.7, 417.0], [91.8, 419.0], [91.9, 420.0], [92.0, 424.0], [92.1, 425.0], [92.2, 430.0], [92.3, 431.0], [92.4, 450.0], [92.5, 451.0], [92.6, 469.0], [92.7, 471.0], [92.8, 485.0], [92.9, 487.0], [93.0, 506.0], [93.1, 509.0], [93.2, 522.0], [93.3, 609.0], [93.4, 611.0], [93.5, 694.0], [93.6, 708.0], [93.7, 732.0], [93.8, 736.0], [93.9, 887.0], [94.0, 899.0], [94.1, 1077.0], [94.2, 1097.0], [94.3, 1392.0], [94.4, 1428.0], [94.5, 1664.0], [94.6, 1738.0], [94.7, 1845.0], [94.8, 1899.0], [94.9, 7593.0], [95.0, 7598.0], [95.1, 7689.0], [95.2, 7709.0], [95.3, 7712.0], [95.4, 7745.0], [95.5, 7794.0], [95.6, 7859.0], [95.7, 7861.0], [95.8, 7867.0], [95.9, 7872.0], [96.0, 7887.0], [96.1, 7895.0], [96.2, 7909.0], [96.3, 7917.0], [96.4, 7923.0], [96.5, 7930.0], [96.6, 7940.0], [96.7, 7940.0], [96.8, 7950.0], [96.9, 7963.0], [97.0, 7966.0], [97.1, 7971.0], [97.2, 7993.0], [97.3, 7999.0], [97.4, 8026.0], [97.5, 8027.0], [97.6, 8029.0], [97.7, 8032.0], [97.8, 8073.0], [97.9, 8083.0], [98.0, 8084.0], [98.1, 8084.0], [98.2, 8120.0], [98.3, 8136.0], [98.4, 8144.0], [98.5, 8162.0], [98.6, 8170.0], [98.7, 8170.0], [98.8, 8182.0], [98.9, 8192.0], [99.0, 8201.0], [99.1, 8239.0], [99.2, 8290.0], [99.3, 8300.0], [99.4, 8492.0], [99.5, 8581.0], [99.6, 8607.0], [99.7, 8648.0], [99.8, 8735.0], [99.9, 8750.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[0.0, 514.0], [0.1, 514.0], [0.2, 516.0], [0.3, 516.0], [0.4, 516.0], [0.5, 516.0], [0.6, 516.0], [0.7, 517.0], [0.8, 517.0], [0.9, 517.0], [1.0, 517.0], [1.1, 517.0], [1.2, 517.0], [1.3, 518.0], [1.4, 518.0], [1.5, 518.0], [1.6, 518.0], [1.7, 518.0], [1.8, 518.0], [1.9, 519.0], [2.0, 519.0], [2.1, 519.0], [2.2, 519.0], [2.3, 519.0], [2.4, 519.0], [2.5, 519.0], [2.6, 520.0], [2.7, 520.0], [2.8, 520.0], [2.9, 520.0], [3.0, 521.0], [3.1, 521.0], [3.2, 521.0], [3.3, 521.0], [3.4, 522.0], [3.5, 522.0], [3.6, 522.0], [3.7, 522.0], [3.8, 522.0], [3.9, 522.0], [4.0, 522.0], [4.1, 522.0], [4.2, 522.0], [4.3, 522.0], [4.4, 523.0], [4.5, 523.0], [4.6, 523.0], [4.7, 523.0], [4.8, 523.0], [4.9, 523.0], [5.0, 523.0], [5.1, 524.0], [5.2, 524.0], [5.3, 524.0], [5.4, 524.0], [5.5, 525.0], [5.6, 525.0], [5.7, 525.0], [5.8, 525.0], [5.9, 526.0], [6.0, 526.0], [6.1, 526.0], [6.2, 526.0], [6.3, 526.0], [6.4, 526.0], [6.5, 526.0], [6.6, 526.0], [6.7, 527.0], [6.8, 527.0], [6.9, 527.0], [7.0, 527.0], [7.1, 527.0], [7.2, 528.0], [7.3, 528.0], [7.4, 528.0], [7.5, 528.0], [7.6, 528.0], [7.7, 528.0], [7.8, 528.0], [7.9, 528.0], [8.0, 528.0], [8.1, 528.0], [8.2, 528.0], [8.3, 528.0], [8.4, 528.0], [8.5, 528.0], [8.6, 529.0], [8.7, 529.0], [8.8, 529.0], [8.9, 529.0], [9.0, 529.0], [9.1, 529.0], [9.2, 529.0], [9.3, 529.0], [9.4, 529.0], [9.5, 529.0], [9.6, 529.0], [9.7, 529.0], [9.8, 529.0], [9.9, 530.0], [10.0, 530.0], [10.1, 530.0], [10.2, 530.0], [10.3, 530.0], [10.4, 530.0], [10.5, 530.0], [10.6, 530.0], [10.7, 530.0], [10.8, 530.0], [10.9, 530.0], [11.0, 530.0], [11.1, 530.0], [11.2, 530.0], [11.3, 531.0], [11.4, 531.0], [11.5, 531.0], [11.6, 531.0], [11.7, 531.0], [11.8, 531.0], [11.9, 531.0], [12.0, 531.0], [12.1, 531.0], [12.2, 531.0], [12.3, 532.0], [12.4, 532.0], [12.5, 532.0], [12.6, 532.0], [12.7, 532.0], [12.8, 532.0], [12.9, 532.0], [13.0, 532.0], [13.1, 532.0], [13.2, 532.0], [13.3, 532.0], [13.4, 532.0], [13.5, 532.0], [13.6, 532.0], [13.7, 532.0], [13.8, 533.0], [13.9, 533.0], [14.0, 533.0], [14.1, 533.0], [14.2, 533.0], [14.3, 533.0], [14.4, 533.0], [14.5, 533.0], [14.6, 533.0], [14.7, 533.0], [14.8, 534.0], [14.9, 534.0], [15.0, 534.0], [15.1, 534.0], [15.2, 534.0], [15.3, 534.0], [15.4, 534.0], [15.5, 534.0], [15.6, 534.0], [15.7, 535.0], [15.8, 535.0], [15.9, 535.0], [16.0, 535.0], [16.1, 535.0], [16.2, 535.0], [16.3, 535.0], [16.4, 535.0], [16.5, 536.0], [16.6, 536.0], [16.7, 536.0], [16.8, 536.0], [16.9, 536.0], [17.0, 536.0], [17.1, 536.0], [17.2, 536.0], [17.3, 536.0], [17.4, 537.0], [17.5, 537.0], [17.6, 537.0], [17.7, 537.0], [17.8, 537.0], [17.9, 537.0], [18.0, 537.0], [18.1, 537.0], [18.2, 537.0], [18.3, 537.0], [18.4, 537.0], [18.5, 538.0], [18.6, 538.0], [18.7, 538.0], [18.8, 538.0], [18.9, 538.0], [19.0, 538.0], [19.1, 538.0], [19.2, 538.0], [19.3, 538.0], [19.4, 538.0], [19.5, 538.0], [19.6, 538.0], [19.7, 538.0], [19.8, 538.0], [19.9, 539.0], [20.0, 539.0], [20.1, 539.0], [20.2, 539.0], [20.3, 539.0], [20.4, 539.0], [20.5, 539.0], [20.6, 539.0], [20.7, 540.0], [20.8, 540.0], [20.9, 540.0], [21.0, 541.0], [21.1, 541.0], [21.2, 541.0], [21.3, 541.0], [21.4, 541.0], [21.5, 541.0], [21.6, 542.0], [21.7, 542.0], [21.8, 542.0], [21.9, 542.0], [22.0, 542.0], [22.1, 542.0], [22.2, 542.0], [22.3, 542.0], [22.4, 542.0], [22.5, 543.0], [22.6, 543.0], [22.7, 543.0], [22.8, 543.0], [22.9, 543.0], [23.0, 543.0], [23.1, 543.0], [23.2, 543.0], [23.3, 543.0], [23.4, 544.0], [23.5, 544.0], [23.6, 544.0], [23.7, 544.0], [23.8, 544.0], [23.9, 544.0], [24.0, 544.0], [24.1, 544.0], [24.2, 544.0], [24.3, 545.0], [24.4, 545.0], [24.5, 545.0], [24.6, 545.0], [24.7, 545.0], [24.8, 546.0], [24.9, 546.0], [25.0, 546.0], [25.1, 546.0], [25.2, 547.0], [25.3, 547.0], [25.4, 547.0], [25.5, 547.0], [25.6, 547.0], [25.7, 547.0], [25.8, 547.0], [25.9, 547.0], [26.0, 547.0], [26.1, 547.0], [26.2, 548.0], [26.3, 548.0], [26.4, 548.0], [26.5, 548.0], [26.6, 548.0], [26.7, 548.0], [26.8, 548.0], [26.9, 548.0], [27.0, 548.0], [27.1, 548.0], [27.2, 549.0], [27.3, 549.0], [27.4, 549.0], [27.5, 549.0], [27.6, 549.0], [27.7, 549.0], [27.8, 549.0], [27.9, 549.0], [28.0, 549.0], [28.1, 550.0], [28.2, 550.0], [28.3, 550.0], [28.4, 550.0], [28.5, 550.0], [28.6, 550.0], [28.7, 551.0], [28.8, 551.0], [28.9, 551.0], [29.0, 551.0], [29.1, 551.0], [29.2, 551.0], [29.3, 551.0], [29.4, 551.0], [29.5, 551.0], [29.6, 552.0], [29.7, 552.0], [29.8, 552.0], [29.9, 552.0], [30.0, 552.0], [30.1, 552.0], [30.2, 553.0], [30.3, 553.0], [30.4, 553.0], [30.5, 553.0], [30.6, 553.0], [30.7, 554.0], [30.8, 554.0], [30.9, 554.0], [31.0, 554.0], [31.1, 554.0], [31.2, 554.0], [31.3, 554.0], [31.4, 554.0], [31.5, 554.0], [31.6, 555.0], [31.7, 555.0], [31.8, 555.0], [31.9, 555.0], [32.0, 555.0], [32.1, 555.0], [32.2, 555.0], [32.3, 555.0], [32.4, 555.0], [32.5, 555.0], [32.6, 556.0], [32.7, 556.0], [32.8, 556.0], [32.9, 556.0], [33.0, 556.0], [33.1, 556.0], [33.2, 556.0], [33.3, 557.0], [33.4, 557.0], [33.5, 557.0], [33.6, 557.0], [33.7, 557.0], [33.8, 557.0], [33.9, 557.0], [34.0, 557.0], [34.1, 558.0], [34.2, 558.0], [34.3, 558.0], [34.4, 558.0], [34.5, 559.0], [34.6, 559.0], [34.7, 559.0], [34.8, 559.0], [34.9, 560.0], [35.0, 560.0], [35.1, 560.0], [35.2, 560.0], [35.3, 560.0], [35.4, 561.0], [35.5, 561.0], [35.6, 561.0], [35.7, 561.0], [35.8, 561.0], [35.9, 561.0], [36.0, 561.0], [36.1, 562.0], [36.2, 562.0], [36.3, 562.0], [36.4, 562.0], [36.5, 562.0], [36.6, 562.0], [36.7, 562.0], [36.8, 563.0], [36.9, 563.0], [37.0, 564.0], [37.1, 564.0], [37.2, 564.0], [37.3, 564.0], [37.4, 564.0], [37.5, 564.0], [37.6, 565.0], [37.7, 565.0], [37.8, 565.0], [37.9, 566.0], [38.0, 566.0], [38.1, 567.0], [38.2, 567.0], [38.3, 567.0], [38.4, 568.0], [38.5, 568.0], [38.6, 568.0], [38.7, 569.0], [38.8, 569.0], [38.9, 569.0], [39.0, 570.0], [39.1, 570.0], [39.2, 570.0], [39.3, 571.0], [39.4, 571.0], [39.5, 571.0], [39.6, 571.0], [39.7, 572.0], [39.8, 572.0], [39.9, 572.0], [40.0, 572.0], [40.1, 572.0], [40.2, 573.0], [40.3, 573.0], [40.4, 573.0], [40.5, 573.0], [40.6, 573.0], [40.7, 574.0], [40.8, 574.0], [40.9, 574.0], [41.0, 574.0], [41.1, 574.0], [41.2, 574.0], [41.3, 574.0], [41.4, 575.0], [41.5, 575.0], [41.6, 575.0], [41.7, 576.0], [41.8, 576.0], [41.9, 576.0], [42.0, 576.0], [42.1, 577.0], [42.2, 577.0], [42.3, 577.0], [42.4, 577.0], [42.5, 577.0], [42.6, 577.0], [42.7, 577.0], [42.8, 578.0], [42.9, 578.0], [43.0, 578.0], [43.1, 578.0], [43.2, 579.0], [43.3, 579.0], [43.4, 579.0], [43.5, 579.0], [43.6, 580.0], [43.7, 581.0], [43.8, 581.0], [43.9, 581.0], [44.0, 581.0], [44.1, 581.0], [44.2, 583.0], [44.3, 583.0], [44.4, 583.0], [44.5, 583.0], [44.6, 583.0], [44.7, 585.0], [44.8, 585.0], [44.9, 585.0], [45.0, 585.0], [45.1, 586.0], [45.2, 586.0], [45.3, 586.0], [45.4, 586.0], [45.5, 587.0], [45.6, 587.0], [45.7, 587.0], [45.8, 588.0], [45.9, 588.0], [46.0, 588.0], [46.1, 588.0], [46.2, 589.0], [46.3, 589.0], [46.4, 591.0], [46.5, 593.0], [46.6, 593.0], [46.7, 593.0], [46.8, 593.0], [46.9, 593.0], [47.0, 594.0], [47.1, 594.0], [47.2, 594.0], [47.3, 595.0], [47.4, 595.0], [47.5, 595.0], [47.6, 595.0], [47.7, 595.0], [47.8, 596.0], [47.9, 596.0], [48.0, 597.0], [48.1, 597.0], [48.2, 597.0], [48.3, 597.0], [48.4, 598.0], [48.5, 598.0], [48.6, 598.0], [48.7, 598.0], [48.8, 598.0], [48.9, 598.0], [49.0, 598.0], [49.1, 598.0], [49.2, 598.0], [49.3, 598.0], [49.4, 599.0], [49.5, 599.0], [49.6, 599.0], [49.7, 600.0], [49.8, 600.0], [49.9, 600.0], [50.0, 600.0], [50.1, 600.0], [50.2, 600.0], [50.3, 600.0], [50.4, 600.0], [50.5, 600.0], [50.6, 601.0], [50.7, 601.0], [50.8, 601.0], [50.9, 601.0], [51.0, 602.0], [51.1, 602.0], [51.2, 602.0], [51.3, 602.0], [51.4, 602.0], [51.5, 602.0], [51.6, 602.0], [51.7, 603.0], [51.8, 603.0], [51.9, 603.0], [52.0, 603.0], [52.1, 603.0], [52.2, 603.0], [52.3, 604.0], [52.4, 604.0], [52.5, 604.0], [52.6, 604.0], [52.7, 604.0], [52.8, 604.0], [52.9, 604.0], [53.0, 605.0], [53.1, 605.0], [53.2, 606.0], [53.3, 606.0], [53.4, 606.0], [53.5, 606.0], [53.6, 606.0], [53.7, 606.0], [53.8, 607.0], [53.9, 607.0], [54.0, 607.0], [54.1, 608.0], [54.2, 608.0], [54.3, 608.0], [54.4, 608.0], [54.5, 608.0], [54.6, 608.0], [54.7, 608.0], [54.8, 608.0], [54.9, 609.0], [55.0, 609.0], [55.1, 609.0], [55.2, 609.0], [55.3, 609.0], [55.4, 610.0], [55.5, 610.0], [55.6, 610.0], [55.7, 610.0], [55.8, 610.0], [55.9, 610.0], [56.0, 610.0], [56.1, 611.0], [56.2, 611.0], [56.3, 611.0], [56.4, 611.0], [56.5, 611.0], [56.6, 611.0], [56.7, 611.0], [56.8, 611.0], [56.9, 612.0], [57.0, 612.0], [57.1, 612.0], [57.2, 612.0], [57.3, 612.0], [57.4, 612.0], [57.5, 612.0], [57.6, 612.0], [57.7, 612.0], [57.8, 612.0], [57.9, 612.0], [58.0, 613.0], [58.1, 613.0], [58.2, 613.0], [58.3, 613.0], [58.4, 613.0], [58.5, 613.0], [58.6, 613.0], [58.7, 613.0], [58.8, 613.0], [58.9, 613.0], [59.0, 613.0], [59.1, 613.0], [59.2, 613.0], [59.3, 613.0], [59.4, 613.0], [59.5, 613.0], [59.6, 613.0], [59.7, 614.0], [59.8, 614.0], [59.9, 614.0], [60.0, 614.0], [60.1, 614.0], [60.2, 614.0], [60.3, 614.0], [60.4, 614.0], [60.5, 614.0], [60.6, 614.0], [60.7, 614.0], [60.8, 614.0], [60.9, 614.0], [61.0, 614.0], [61.1, 615.0], [61.2, 615.0], [61.3, 615.0], [61.4, 615.0], [61.5, 615.0], [61.6, 615.0], [61.7, 615.0], [61.8, 615.0], [61.9, 615.0], [62.0, 615.0], [62.1, 615.0], [62.2, 615.0], [62.3, 615.0], [62.4, 615.0], [62.5, 615.0], [62.6, 615.0], [62.7, 615.0], [62.8, 615.0], [62.9, 615.0], [63.0, 616.0], [63.1, 616.0], [63.2, 616.0], [63.3, 616.0], [63.4, 616.0], [63.5, 616.0], [63.6, 616.0], [63.7, 616.0], [63.8, 616.0], [63.9, 616.0], [64.0, 616.0], [64.1, 616.0], [64.2, 616.0], [64.3, 616.0], [64.4, 616.0], [64.5, 616.0], [64.6, 616.0], [64.7, 616.0], [64.8, 616.0], [64.9, 616.0], [65.0, 616.0], [65.1, 616.0], [65.2, 616.0], [65.3, 616.0], [65.4, 616.0], [65.5, 616.0], [65.6, 616.0], [65.7, 616.0], [65.8, 616.0], [65.9, 616.0], [66.0, 616.0], [66.1, 616.0], [66.2, 616.0], [66.3, 617.0], [66.4, 617.0], [66.5, 617.0], [66.6, 617.0], [66.7, 617.0], [66.8, 617.0], [66.9, 617.0], [67.0, 617.0], [67.1, 617.0], [67.2, 617.0], [67.3, 617.0], [67.4, 617.0], [67.5, 617.0], [67.6, 617.0], [67.7, 617.0], [67.8, 617.0], [67.9, 617.0], [68.0, 617.0], [68.1, 617.0], [68.2, 617.0], [68.3, 617.0], [68.4, 617.0], [68.5, 617.0], [68.6, 617.0], [68.7, 617.0], [68.8, 617.0], [68.9, 617.0], [69.0, 617.0], [69.1, 617.0], [69.2, 618.0], [69.3, 618.0], [69.4, 618.0], [69.5, 618.0], [69.6, 618.0], [69.7, 618.0], [69.8, 618.0], [69.9, 618.0], [70.0, 618.0], [70.1, 618.0], [70.2, 618.0], [70.3, 618.0], [70.4, 618.0], [70.5, 618.0], [70.6, 618.0], [70.7, 618.0], [70.8, 618.0], [70.9, 618.0], [71.0, 619.0], [71.1, 619.0], [71.2, 619.0], [71.3, 619.0], [71.4, 619.0], [71.5, 619.0], [71.6, 619.0], [71.7, 619.0], [71.8, 619.0], [71.9, 619.0], [72.0, 620.0], [72.1, 620.0], [72.2, 620.0], [72.3, 620.0], [72.4, 620.0], [72.5, 620.0], [72.6, 620.0], [72.7, 620.0], [72.8, 620.0], [72.9, 620.0], [73.0, 620.0], [73.1, 621.0], [73.2, 621.0], [73.3, 621.0], [73.4, 621.0], [73.5, 621.0], [73.6, 621.0], [73.7, 621.0], [73.8, 622.0], [73.9, 622.0], [74.0, 622.0], [74.1, 622.0], [74.2, 622.0], [74.3, 622.0], [74.4, 622.0], [74.5, 622.0], [74.6, 623.0], [74.7, 623.0], [74.8, 623.0], [74.9, 624.0], [75.0, 624.0], [75.1, 625.0], [75.2, 625.0], [75.3, 626.0], [75.4, 626.0], [75.5, 627.0], [75.6, 627.0], [75.7, 627.0], [75.8, 627.0], [75.9, 628.0], [76.0, 628.0], [76.1, 628.0], [76.2, 629.0], [76.3, 629.0], [76.4, 630.0], [76.5, 630.0], [76.6, 630.0], [76.7, 632.0], [76.8, 633.0], [76.9, 634.0], [77.0, 636.0], [77.1, 637.0], [77.2, 638.0], [77.3, 641.0], [77.4, 642.0], [77.5, 642.0], [77.6, 644.0], [77.7, 645.0], [77.8, 646.0], [77.9, 646.0], [78.0, 647.0], [78.1, 648.0], [78.2, 652.0], [78.3, 652.0], [78.4, 652.0], [78.5, 652.0], [78.6, 653.0], [78.7, 654.0], [78.8, 655.0], [78.9, 655.0], [79.0, 658.0], [79.1, 658.0], [79.2, 658.0], [79.3, 660.0], [79.4, 660.0], [79.5, 662.0], [79.6, 664.0], [79.7, 665.0], [79.8, 666.0], [79.9, 670.0], [80.0, 674.0], [80.1, 678.0], [80.2, 680.0], [80.3, 681.0], [80.4, 681.0], [80.5, 682.0], [80.6, 683.0], [80.7, 688.0], [80.8, 689.0], [80.9, 695.0], [81.0, 697.0], [81.1, 700.0], [81.2, 702.0], [81.3, 704.0], [81.4, 704.0], [81.5, 705.0], [81.6, 707.0], [81.7, 707.0], [81.8, 710.0], [81.9, 710.0], [82.0, 710.0], [82.1, 711.0], [82.2, 712.0], [82.3, 713.0], [82.4, 713.0], [82.5, 715.0], [82.6, 717.0], [82.7, 717.0], [82.8, 717.0], [82.9, 718.0], [83.0, 719.0], [83.1, 719.0], [83.2, 720.0], [83.3, 721.0], [83.4, 721.0], [83.5, 721.0], [83.6, 723.0], [83.7, 724.0], [83.8, 728.0], [83.9, 732.0], [84.0, 734.0], [84.1, 738.0], [84.2, 739.0], [84.3, 742.0], [84.4, 748.0], [84.5, 748.0], [84.6, 751.0], [84.7, 755.0], [84.8, 758.0], [84.9, 759.0], [85.0, 768.0], [85.1, 781.0], [85.2, 788.0], [85.3, 792.0], [85.4, 799.0], [85.5, 803.0], [85.6, 822.0], [85.7, 839.0], [85.8, 869.0], [85.9, 875.0], [86.0, 920.0], [86.1, 1029.0], [86.2, 1066.0], [86.3, 1121.0], [86.4, 1228.0], [86.5, 1323.0], [86.6, 1334.0], [86.7, 1340.0], [86.8, 1346.0], [86.9, 1368.0], [87.0, 1439.0], [87.1, 1449.0], [87.2, 1469.0], [87.3, 1501.0], [87.4, 1532.0], [87.5, 1655.0], [87.6, 1744.0], [87.7, 1992.0], [87.8, 2419.0], [87.9, 2583.0], [88.0, 2647.0], [88.1, 3021.0], [88.2, 3107.0], [88.3, 3317.0], [88.4, 3600.0], [88.5, 3889.0], [88.6, 4084.0], [88.7, 4155.0], [88.8, 4319.0], [88.9, 4671.0], [89.0, 4776.0], [89.1, 4829.0], [89.2, 4939.0], [89.3, 5001.0], [89.4, 5012.0], [89.5, 5189.0], [89.6, 5235.0], [89.7, 5292.0], [89.8, 5401.0], [89.9, 5470.0], [90.0, 5550.0], [90.1, 5944.0], [90.2, 5983.0], [90.3, 5986.0], [90.4, 6017.0], [90.5, 6222.0], [90.6, 6274.0], [90.7, 6411.0], [90.8, 6421.0], [90.9, 6754.0], [91.0, 6760.0], [91.1, 7054.0], [91.2, 7081.0], [91.3, 7376.0], [91.4, 9582.0], [91.5, 9827.0], [91.6, 9905.0], [91.7, 9938.0], [91.8, 9938.0], [91.9, 10070.0], [92.0, 10339.0], [92.1, 10738.0], [92.2, 10992.0], [92.3, 11129.0], [92.4, 11266.0], [92.5, 11355.0], [92.6, 11375.0], [92.7, 11389.0], [92.8, 11472.0], [92.9, 11554.0], [93.0, 11577.0], [93.1, 11581.0], [93.2, 11583.0], [93.3, 11596.0], [93.4, 11640.0], [93.5, 11665.0], [93.6, 11681.0], [93.7, 11700.0], [93.8, 11714.0], [93.9, 11790.0], [94.0, 11806.0], [94.1, 11886.0], [94.2, 11899.0], [94.3, 11983.0], [94.4, 12035.0], [94.5, 12303.0], [94.6, 12373.0], [94.7, 12378.0], [94.8, 12387.0], [94.9, 12388.0], [95.0, 12391.0], [95.1, 12495.0], [95.2, 12498.0], [95.3, 12500.0], [95.4, 12699.0], [95.5, 12854.0], [95.6, 12922.0], [95.7, 13003.0], [95.8, 13032.0], [95.9, 13036.0], [96.0, 13100.0], [96.1, 13143.0], [96.2, 13146.0], [96.3, 13186.0], [96.4, 13191.0], [96.5, 13250.0], [96.6, 13299.0], [96.7, 13332.0], [96.8, 13371.0], [96.9, 13400.0], [97.0, 13481.0], [97.1, 13501.0], [97.2, 13512.0], [97.3, 13592.0], [97.4, 13609.0], [97.5, 13617.0], [97.6, 13651.0], [97.7, 13714.0], [97.8, 13714.0], [97.9, 13732.0], [98.0, 13741.0], [98.1, 13814.0], [98.2, 13816.0], [98.3, 13818.0], [98.4, 13819.0], [98.5, 13955.0], [98.6, 14038.0], [98.7, 14113.0], [98.8, 14179.0], [98.9, 14209.0], [99.0, 14245.0], [99.1, 14317.0], [99.2, 14474.0], [99.3, 14521.0], [99.4, 14542.0], [99.5, 14663.0], [99.6, 14714.0], [99.7, 14735.0], [99.8, 14950.0], [99.9, 15257.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[0.0, 143.0], [0.1, 144.0], [0.2, 144.0], [0.3, 144.0], [0.4, 144.0], [0.5, 144.0], [0.6, 144.0], [0.7, 144.0], [0.8, 145.0], [0.9, 145.0], [1.0, 145.0], [1.1, 145.0], [1.2, 145.0], [1.3, 146.0], [1.4, 146.0], [1.5, 146.0], [1.6, 146.0], [1.7, 147.0], [1.8, 147.0], [1.9, 147.0], [2.0, 147.0], [2.1, 147.0], [2.2, 147.0], [2.3, 148.0], [2.4, 148.0], [2.5, 148.0], [2.6, 148.0], [2.7, 148.0], [2.8, 148.0], [2.9, 148.0], [3.0, 148.0], [3.1, 148.0], [3.2, 148.0], [3.3, 148.0], [3.4, 148.0], [3.5, 148.0], [3.6, 149.0], [3.7, 149.0], [3.8, 149.0], [3.9, 149.0], [4.0, 150.0], [4.1, 150.0], [4.2, 150.0], [4.3, 150.0], [4.4, 150.0], [4.5, 150.0], [4.6, 150.0], [4.7, 150.0], [4.8, 150.0], [4.9, 150.0], [5.0, 151.0], [5.1, 151.0], [5.2, 151.0], [5.3, 151.0], [5.4, 152.0], [5.5, 152.0], [5.6, 152.0], [5.7, 152.0], [5.8, 152.0], [5.9, 153.0], [6.0, 153.0], [6.1, 153.0], [6.2, 153.0], [6.3, 153.0], [6.4, 153.0], [6.5, 153.0], [6.6, 153.0], [6.7, 153.0], [6.8, 153.0], [6.9, 153.0], [7.0, 154.0], [7.1, 154.0], [7.2, 154.0], [7.3, 154.0], [7.4, 154.0], [7.5, 154.0], [7.6, 154.0], [7.7, 154.0], [7.8, 154.0], [7.9, 154.0], [8.0, 155.0], [8.1, 155.0], [8.2, 155.0], [8.3, 155.0], [8.4, 155.0], [8.5, 155.0], [8.6, 155.0], [8.7, 155.0], [8.8, 155.0], [8.9, 155.0], [9.0, 155.0], [9.1, 156.0], [9.2, 156.0], [9.3, 156.0], [9.4, 156.0], [9.5, 156.0], [9.6, 156.0], [9.7, 156.0], [9.8, 156.0], [9.9, 156.0], [10.0, 157.0], [10.1, 157.0], [10.2, 157.0], [10.3, 157.0], [10.4, 157.0], [10.5, 157.0], [10.6, 157.0], [10.7, 157.0], [10.8, 157.0], [10.9, 157.0], [11.0, 157.0], [11.1, 157.0], [11.2, 157.0], [11.3, 157.0], [11.4, 157.0], [11.5, 157.0], [11.6, 158.0], [11.7, 158.0], [11.8, 158.0], [11.9, 158.0], [12.0, 158.0], [12.1, 158.0], [12.2, 158.0], [12.3, 158.0], [12.4, 158.0], [12.5, 158.0], [12.6, 158.0], [12.7, 158.0], [12.8, 158.0], [12.9, 158.0], [13.0, 158.0], [13.1, 158.0], [13.2, 158.0], [13.3, 158.0], [13.4, 159.0], [13.5, 159.0], [13.6, 159.0], [13.7, 159.0], [13.8, 159.0], [13.9, 159.0], [14.0, 159.0], [14.1, 159.0], [14.2, 159.0], [14.3, 159.0], [14.4, 160.0], [14.5, 160.0], [14.6, 160.0], [14.7, 160.0], [14.8, 160.0], [14.9, 160.0], [15.0, 160.0], [15.1, 160.0], [15.2, 160.0], [15.3, 160.0], [15.4, 160.0], [15.5, 160.0], [15.6, 160.0], [15.7, 160.0], [15.8, 161.0], [15.9, 161.0], [16.0, 161.0], [16.1, 161.0], [16.2, 161.0], [16.3, 161.0], [16.4, 161.0], [16.5, 161.0], [16.6, 161.0], [16.7, 161.0], [16.8, 161.0], [16.9, 161.0], [17.0, 162.0], [17.1, 162.0], [17.2, 162.0], [17.3, 162.0], [17.4, 162.0], [17.5, 162.0], [17.6, 162.0], [17.7, 162.0], [17.8, 162.0], [17.9, 162.0], [18.0, 162.0], [18.1, 163.0], [18.2, 163.0], [18.3, 163.0], [18.4, 163.0], [18.5, 163.0], [18.6, 163.0], [18.7, 163.0], [18.8, 163.0], [18.9, 163.0], [19.0, 163.0], [19.1, 163.0], [19.2, 163.0], [19.3, 164.0], [19.4, 164.0], [19.5, 164.0], [19.6, 164.0], [19.7, 164.0], [19.8, 164.0], [19.9, 164.0], [20.0, 164.0], [20.1, 164.0], [20.2, 165.0], [20.3, 165.0], [20.4, 165.0], [20.5, 165.0], [20.6, 165.0], [20.7, 165.0], [20.8, 165.0], [20.9, 165.0], [21.0, 165.0], [21.1, 165.0], [21.2, 165.0], [21.3, 165.0], [21.4, 166.0], [21.5, 166.0], [21.6, 166.0], [21.7, 166.0], [21.8, 166.0], [21.9, 166.0], [22.0, 166.0], [22.1, 166.0], [22.2, 166.0], [22.3, 166.0], [22.4, 167.0], [22.5, 167.0], [22.6, 167.0], [22.7, 167.0], [22.8, 167.0], [22.9, 167.0], [23.0, 167.0], [23.1, 167.0], [23.2, 167.0], [23.3, 167.0], [23.4, 167.0], [23.5, 167.0], [23.6, 167.0], [23.7, 167.0], [23.8, 167.0], [23.9, 168.0], [24.0, 168.0], [24.1, 168.0], [24.2, 168.0], [24.3, 168.0], [24.4, 168.0], [24.5, 168.0], [24.6, 168.0], [24.7, 169.0], [24.8, 169.0], [24.9, 169.0], [25.0, 169.0], [25.1, 169.0], [25.2, 169.0], [25.3, 169.0], [25.4, 169.0], [25.5, 169.0], [25.6, 169.0], [25.7, 169.0], [25.8, 169.0], [25.9, 169.0], [26.0, 170.0], [26.1, 170.0], [26.2, 170.0], [26.3, 170.0], [26.4, 170.0], [26.5, 170.0], [26.6, 170.0], [26.7, 170.0], [26.8, 170.0], [26.9, 171.0], [27.0, 171.0], [27.1, 171.0], [27.2, 171.0], [27.3, 171.0], [27.4, 171.0], [27.5, 171.0], [27.6, 171.0], [27.7, 171.0], [27.8, 171.0], [27.9, 171.0], [28.0, 171.0], [28.1, 171.0], [28.2, 171.0], [28.3, 171.0], [28.4, 172.0], [28.5, 172.0], [28.6, 172.0], [28.7, 172.0], [28.8, 172.0], [28.9, 172.0], [29.0, 172.0], [29.1, 172.0], [29.2, 172.0], [29.3, 172.0], [29.4, 173.0], [29.5, 173.0], [29.6, 173.0], [29.7, 173.0], [29.8, 173.0], [29.9, 173.0], [30.0, 173.0], [30.1, 173.0], [30.2, 174.0], [30.3, 174.0], [30.4, 174.0], [30.5, 174.0], [30.6, 174.0], [30.7, 174.0], [30.8, 174.0], [30.9, 174.0], [31.0, 174.0], [31.1, 174.0], [31.2, 174.0], [31.3, 174.0], [31.4, 174.0], [31.5, 174.0], [31.6, 174.0], [31.7, 174.0], [31.8, 175.0], [31.9, 175.0], [32.0, 175.0], [32.1, 175.0], [32.2, 175.0], [32.3, 176.0], [32.4, 176.0], [32.5, 176.0], [32.6, 176.0], [32.7, 176.0], [32.8, 176.0], [32.9, 176.0], [33.0, 176.0], [33.1, 176.0], [33.2, 176.0], [33.3, 177.0], [33.4, 177.0], [33.5, 177.0], [33.6, 177.0], [33.7, 177.0], [33.8, 177.0], [33.9, 177.0], [34.0, 177.0], [34.1, 177.0], [34.2, 177.0], [34.3, 177.0], [34.4, 178.0], [34.5, 178.0], [34.6, 178.0], [34.7, 178.0], [34.8, 178.0], [34.9, 178.0], [35.0, 178.0], [35.1, 179.0], [35.2, 179.0], [35.3, 179.0], [35.4, 179.0], [35.5, 179.0], [35.6, 179.0], [35.7, 179.0], [35.8, 179.0], [35.9, 179.0], [36.0, 179.0], [36.1, 179.0], [36.2, 179.0], [36.3, 179.0], [36.4, 180.0], [36.5, 180.0], [36.6, 180.0], [36.7, 180.0], [36.8, 180.0], [36.9, 180.0], [37.0, 180.0], [37.1, 180.0], [37.2, 180.0], [37.3, 180.0], [37.4, 180.0], [37.5, 180.0], [37.6, 181.0], [37.7, 181.0], [37.8, 181.0], [37.9, 181.0], [38.0, 181.0], [38.1, 181.0], [38.2, 181.0], [38.3, 181.0], [38.4, 182.0], [38.5, 182.0], [38.6, 182.0], [38.7, 183.0], [38.8, 183.0], [38.9, 183.0], [39.0, 183.0], [39.1, 183.0], [39.2, 184.0], [39.3, 184.0], [39.4, 184.0], [39.5, 184.0], [39.6, 184.0], [39.7, 184.0], [39.8, 184.0], [39.9, 184.0], [40.0, 184.0], [40.1, 184.0], [40.2, 185.0], [40.3, 185.0], [40.4, 185.0], [40.5, 186.0], [40.6, 186.0], [40.7, 186.0], [40.8, 186.0], [40.9, 186.0], [41.0, 186.0], [41.1, 187.0], [41.2, 187.0], [41.3, 187.0], [41.4, 187.0], [41.5, 188.0], [41.6, 188.0], [41.7, 188.0], [41.8, 188.0], [41.9, 189.0], [42.0, 189.0], [42.1, 189.0], [42.2, 189.0], [42.3, 189.0], [42.4, 189.0], [42.5, 189.0], [42.6, 189.0], [42.7, 190.0], [42.8, 190.0], [42.9, 190.0], [43.0, 190.0], [43.1, 190.0], [43.2, 190.0], [43.3, 190.0], [43.4, 190.0], [43.5, 190.0], [43.6, 190.0], [43.7, 191.0], [43.8, 191.0], [43.9, 191.0], [44.0, 191.0], [44.1, 191.0], [44.2, 191.0], [44.3, 191.0], [44.4, 192.0], [44.5, 192.0], [44.6, 192.0], [44.7, 192.0], [44.8, 192.0], [44.9, 192.0], [45.0, 193.0], [45.1, 193.0], [45.2, 193.0], [45.3, 193.0], [45.4, 193.0], [45.5, 193.0], [45.6, 194.0], [45.7, 194.0], [45.8, 194.0], [45.9, 194.0], [46.0, 194.0], [46.1, 194.0], [46.2, 194.0], [46.3, 194.0], [46.4, 194.0], [46.5, 195.0], [46.6, 195.0], [46.7, 195.0], [46.8, 195.0], [46.9, 195.0], [47.0, 195.0], [47.1, 196.0], [47.2, 196.0], [47.3, 196.0], [47.4, 196.0], [47.5, 196.0], [47.6, 196.0], [47.7, 196.0], [47.8, 196.0], [47.9, 196.0], [48.0, 196.0], [48.1, 197.0], [48.2, 197.0], [48.3, 197.0], [48.4, 197.0], [48.5, 197.0], [48.6, 197.0], [48.7, 197.0], [48.8, 197.0], [48.9, 198.0], [49.0, 198.0], [49.1, 198.0], [49.2, 199.0], [49.3, 199.0], [49.4, 199.0], [49.5, 199.0], [49.6, 199.0], [49.7, 199.0], [49.8, 199.0], [49.9, 199.0], [50.0, 200.0], [50.1, 200.0], [50.2, 200.0], [50.3, 200.0], [50.4, 200.0], [50.5, 200.0], [50.6, 200.0], [50.7, 200.0], [50.8, 200.0], [50.9, 200.0], [51.0, 200.0], [51.1, 200.0], [51.2, 201.0], [51.3, 201.0], [51.4, 201.0], [51.5, 201.0], [51.6, 201.0], [51.7, 201.0], [51.8, 201.0], [51.9, 201.0], [52.0, 201.0], [52.1, 201.0], [52.2, 201.0], [52.3, 201.0], [52.4, 202.0], [52.5, 202.0], [52.6, 202.0], [52.7, 202.0], [52.8, 202.0], [52.9, 202.0], [53.0, 202.0], [53.1, 202.0], [53.2, 202.0], [53.3, 202.0], [53.4, 202.0], [53.5, 202.0], [53.6, 203.0], [53.7, 203.0], [53.8, 203.0], [53.9, 203.0], [54.0, 203.0], [54.1, 203.0], [54.2, 203.0], [54.3, 203.0], [54.4, 203.0], [54.5, 203.0], [54.6, 203.0], [54.7, 203.0], [54.8, 204.0], [54.9, 204.0], [55.0, 204.0], [55.1, 204.0], [55.2, 204.0], [55.3, 204.0], [55.4, 204.0], [55.5, 204.0], [55.6, 204.0], [55.7, 204.0], [55.8, 204.0], [55.9, 204.0], [56.0, 204.0], [56.1, 204.0], [56.2, 204.0], [56.3, 204.0], [56.4, 204.0], [56.5, 204.0], [56.6, 204.0], [56.7, 204.0], [56.8, 204.0], [56.9, 204.0], [57.0, 204.0], [57.1, 204.0], [57.2, 204.0], [57.3, 204.0], [57.4, 204.0], [57.5, 204.0], [57.6, 204.0], [57.7, 204.0], [57.8, 204.0], [57.9, 204.0], [58.0, 204.0], [58.1, 204.0], [58.2, 204.0], [58.3, 204.0], [58.4, 205.0], [58.5, 205.0], [58.6, 205.0], [58.7, 205.0], [58.8, 205.0], [58.9, 205.0], [59.0, 205.0], [59.1, 205.0], [59.2, 205.0], [59.3, 205.0], [59.4, 205.0], [59.5, 205.0], [59.6, 205.0], [59.7, 205.0], [59.8, 205.0], [59.9, 205.0], [60.0, 205.0], [60.1, 205.0], [60.2, 205.0], [60.3, 205.0], [60.4, 205.0], [60.5, 205.0], [60.6, 205.0], [60.7, 205.0], [60.8, 205.0], [60.9, 205.0], [61.0, 205.0], [61.1, 205.0], [61.2, 205.0], [61.3, 205.0], [61.4, 205.0], [61.5, 205.0], [61.6, 205.0], [61.7, 205.0], [61.8, 205.0], [61.9, 205.0], [62.0, 205.0], [62.1, 205.0], [62.2, 205.0], [62.3, 205.0], [62.4, 206.0], [62.5, 206.0], [62.6, 206.0], [62.7, 206.0], [62.8, 206.0], [62.9, 206.0], [63.0, 206.0], [63.1, 206.0], [63.2, 206.0], [63.3, 206.0], [63.4, 206.0], [63.5, 206.0], [63.6, 206.0], [63.7, 206.0], [63.8, 206.0], [63.9, 206.0], [64.0, 206.0], [64.1, 206.0], [64.2, 206.0], [64.3, 206.0], [64.4, 206.0], [64.5, 206.0], [64.6, 206.0], [64.7, 206.0], [64.8, 207.0], [64.9, 207.0], [65.0, 207.0], [65.1, 207.0], [65.2, 207.0], [65.3, 207.0], [65.4, 207.0], [65.5, 207.0], [65.6, 207.0], [65.7, 207.0], [65.8, 207.0], [65.9, 207.0], [66.0, 207.0], [66.1, 207.0], [66.2, 207.0], [66.3, 208.0], [66.4, 208.0], [66.5, 208.0], [66.6, 208.0], [66.7, 208.0], [66.8, 208.0], [66.9, 208.0], [67.0, 208.0], [67.1, 208.0], [67.2, 208.0], [67.3, 208.0], [67.4, 209.0], [67.5, 209.0], [67.6, 209.0], [67.7, 209.0], [67.8, 209.0], [67.9, 209.0], [68.0, 209.0], [68.1, 209.0], [68.2, 209.0], [68.3, 209.0], [68.4, 210.0], [68.5, 210.0], [68.6, 210.0], [68.7, 210.0], [68.8, 210.0], [68.9, 210.0], [69.0, 210.0], [69.1, 210.0], [69.2, 210.0], [69.3, 210.0], [69.4, 211.0], [69.5, 211.0], [69.6, 211.0], [69.7, 211.0], [69.8, 211.0], [69.9, 211.0], [70.0, 211.0], [70.1, 212.0], [70.2, 212.0], [70.3, 212.0], [70.4, 212.0], [70.5, 212.0], [70.6, 212.0], [70.7, 212.0], [70.8, 212.0], [70.9, 212.0], [71.0, 212.0], [71.1, 213.0], [71.2, 213.0], [71.3, 213.0], [71.4, 213.0], [71.5, 213.0], [71.6, 213.0], [71.7, 213.0], [71.8, 213.0], [71.9, 213.0], [72.0, 214.0], [72.1, 214.0], [72.2, 214.0], [72.3, 214.0], [72.4, 215.0], [72.5, 215.0], [72.6, 215.0], [72.7, 215.0], [72.8, 215.0], [72.9, 215.0], [73.0, 216.0], [73.1, 216.0], [73.2, 217.0], [73.3, 217.0], [73.4, 218.0], [73.5, 218.0], [73.6, 218.0], [73.7, 218.0], [73.8, 218.0], [73.9, 219.0], [74.0, 219.0], [74.1, 219.0], [74.2, 219.0], [74.3, 219.0], [74.4, 219.0], [74.5, 219.0], [74.6, 220.0], [74.7, 220.0], [74.8, 220.0], [74.9, 220.0], [75.0, 220.0], [75.1, 222.0], [75.2, 222.0], [75.3, 222.0], [75.4, 222.0], [75.5, 223.0], [75.6, 223.0], [75.7, 223.0], [75.8, 223.0], [75.9, 224.0], [76.0, 224.0], [76.1, 224.0], [76.2, 224.0], [76.3, 224.0], [76.4, 224.0], [76.5, 224.0], [76.6, 225.0], [76.7, 225.0], [76.8, 226.0], [76.9, 226.0], [77.0, 226.0], [77.1, 226.0], [77.2, 227.0], [77.3, 228.0], [77.4, 228.0], [77.5, 228.0], [77.6, 228.0], [77.7, 228.0], [77.8, 228.0], [77.9, 229.0], [78.0, 229.0], [78.1, 230.0], [78.2, 231.0], [78.3, 231.0], [78.4, 232.0], [78.5, 232.0], [78.6, 233.0], [78.7, 234.0], [78.8, 234.0], [78.9, 234.0], [79.0, 235.0], [79.1, 235.0], [79.2, 236.0], [79.3, 236.0], [79.4, 237.0], [79.5, 237.0], [79.6, 237.0], [79.7, 238.0], [79.8, 238.0], [79.9, 238.0], [80.0, 238.0], [80.1, 239.0], [80.2, 239.0], [80.3, 239.0], [80.4, 240.0], [80.5, 240.0], [80.6, 241.0], [80.7, 242.0], [80.8, 242.0], [80.9, 242.0], [81.0, 242.0], [81.1, 243.0], [81.2, 244.0], [81.3, 244.0], [81.4, 247.0], [81.5, 247.0], [81.6, 248.0], [81.7, 248.0], [81.8, 250.0], [81.9, 252.0], [82.0, 252.0], [82.1, 253.0], [82.2, 253.0], [82.3, 254.0], [82.4, 254.0], [82.5, 255.0], [82.6, 255.0], [82.7, 255.0], [82.8, 256.0], [82.9, 257.0], [83.0, 258.0], [83.1, 258.0], [83.2, 258.0], [83.3, 259.0], [83.4, 259.0], [83.5, 259.0], [83.6, 259.0], [83.7, 260.0], [83.8, 261.0], [83.9, 262.0], [84.0, 264.0], [84.1, 265.0], [84.2, 266.0], [84.3, 266.0], [84.4, 269.0], [84.5, 269.0], [84.6, 269.0], [84.7, 270.0], [84.8, 273.0], [84.9, 274.0], [85.0, 275.0], [85.1, 275.0], [85.2, 277.0], [85.3, 279.0], [85.4, 285.0], [85.5, 286.0], [85.6, 289.0], [85.7, 289.0], [85.8, 289.0], [85.9, 290.0], [86.0, 290.0], [86.1, 290.0], [86.2, 290.0], [86.3, 291.0], [86.4, 292.0], [86.5, 294.0], [86.6, 294.0], [86.7, 294.0], [86.8, 295.0], [86.9, 295.0], [87.0, 295.0], [87.1, 296.0], [87.2, 296.0], [87.3, 297.0], [87.4, 298.0], [87.5, 299.0], [87.6, 299.0], [87.7, 300.0], [87.8, 300.0], [87.9, 300.0], [88.0, 300.0], [88.1, 300.0], [88.2, 301.0], [88.3, 301.0], [88.4, 301.0], [88.5, 301.0], [88.6, 302.0], [88.7, 302.0], [88.8, 302.0], [88.9, 302.0], [89.0, 303.0], [89.1, 303.0], [89.2, 303.0], [89.3, 304.0], [89.4, 304.0], [89.5, 304.0], [89.6, 304.0], [89.7, 304.0], [89.8, 305.0], [89.9, 305.0], [90.0, 305.0], [90.1, 305.0], [90.2, 305.0], [90.3, 306.0], [90.4, 306.0], [90.5, 306.0], [90.6, 306.0], [90.7, 306.0], [90.8, 306.0], [90.9, 307.0], [91.0, 307.0], [91.1, 307.0], [91.2, 307.0], [91.3, 307.0], [91.4, 308.0], [91.5, 309.0], [91.6, 310.0], [91.7, 310.0], [91.8, 310.0], [91.9, 310.0], [92.0, 311.0], [92.1, 311.0], [92.2, 313.0], [92.3, 317.0], [92.4, 318.0], [92.5, 322.0], [92.6, 323.0], [92.7, 325.0], [92.8, 373.0], [92.9, 381.0], [93.0, 391.0], [93.1, 496.0], [93.2, 592.0], [93.3, 615.0], [93.4, 637.0], [93.5, 717.0], [93.6, 727.0], [93.7, 748.0], [93.8, 922.0], [93.9, 1286.0], [94.0, 1445.0], [94.1, 1756.0], [94.2, 1803.0], [94.3, 1819.0], [94.4, 6941.0], [94.5, 7083.0], [94.6, 7167.0], [94.7, 7168.0], [94.8, 7271.0], [94.9, 7300.0], [95.0, 7325.0], [95.1, 7332.0], [95.2, 7342.0], [95.3, 7343.0], [95.4, 7356.0], [95.5, 7359.0], [95.6, 7362.0], [95.7, 7367.0], [95.8, 7369.0], [95.9, 7369.0], [96.0, 7369.0], [96.1, 7371.0], [96.2, 7372.0], [96.3, 7375.0], [96.4, 7377.0], [96.5, 7379.0], [96.6, 7382.0], [96.7, 7390.0], [96.8, 7394.0], [96.9, 7399.0], [97.0, 7403.0], [97.1, 7420.0], [97.2, 7428.0], [97.3, 7477.0], [97.4, 7497.0], [97.5, 7504.0], [97.6, 7512.0], [97.7, 7549.0], [97.8, 7551.0], [97.9, 7558.0], [98.0, 7574.0], [98.1, 7577.0], [98.2, 7585.0], [98.3, 7608.0], [98.4, 7611.0], [98.5, 7618.0], [98.6, 7634.0], [98.7, 7646.0], [98.8, 7663.0], [98.9, 7676.0], [99.0, 7677.0], [99.1, 7678.0], [99.2, 7680.0], [99.3, 7706.0], [99.4, 7810.0], [99.5, 7817.0], [99.6, 7840.0], [99.7, 7966.0], [99.8, 8087.0], [99.9, 8419.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[0.0, 711.0], [0.1, 727.0], [0.2, 732.0], [0.3, 732.0], [0.4, 734.0], [0.5, 740.0], [0.6, 741.0], [0.7, 743.0], [0.8, 746.0], [0.9, 747.0], [1.0, 748.0], [1.1, 749.0], [1.2, 749.0], [1.3, 751.0], [1.4, 752.0], [1.5, 753.0], [1.6, 754.0], [1.7, 754.0], [1.8, 755.0], [1.9, 755.0], [2.0, 756.0], [2.1, 756.0], [2.2, 757.0], [2.3, 757.0], [2.4, 758.0], [2.5, 759.0], [2.6, 759.0], [2.7, 760.0], [2.8, 760.0], [2.9, 762.0], [3.0, 762.0], [3.1, 763.0], [3.2, 764.0], [3.3, 764.0], [3.4, 765.0], [3.5, 766.0], [3.6, 767.0], [3.7, 767.0], [3.8, 768.0], [3.9, 768.0], [4.0, 770.0], [4.1, 771.0], [4.2, 771.0], [4.3, 772.0], [4.4, 773.0], [4.5, 773.0], [4.6, 773.0], [4.7, 774.0], [4.8, 774.0], [4.9, 774.0], [5.0, 776.0], [5.1, 776.0], [5.2, 776.0], [5.3, 777.0], [5.4, 781.0], [5.5, 781.0], [5.6, 782.0], [5.7, 782.0], [5.8, 783.0], [5.9, 783.0], [6.0, 783.0], [6.1, 784.0], [6.2, 784.0], [6.3, 784.0], [6.4, 784.0], [6.5, 784.0], [6.6, 785.0], [6.7, 785.0], [6.8, 785.0], [6.9, 786.0], [7.0, 786.0], [7.1, 786.0], [7.2, 789.0], [7.3, 790.0], [7.4, 790.0], [7.5, 791.0], [7.6, 791.0], [7.7, 792.0], [7.8, 793.0], [7.9, 793.0], [8.0, 793.0], [8.1, 793.0], [8.2, 794.0], [8.3, 794.0], [8.4, 794.0], [8.5, 794.0], [8.6, 794.0], [8.7, 795.0], [8.8, 796.0], [8.9, 798.0], [9.0, 799.0], [9.1, 800.0], [9.2, 801.0], [9.3, 801.0], [9.4, 802.0], [9.5, 803.0], [9.6, 804.0], [9.7, 805.0], [9.8, 805.0], [9.9, 805.0], [10.0, 806.0], [10.1, 807.0], [10.2, 807.0], [10.3, 807.0], [10.4, 808.0], [10.5, 810.0], [10.6, 810.0], [10.7, 810.0], [10.8, 810.0], [10.9, 810.0], [11.0, 810.0], [11.1, 810.0], [11.2, 811.0], [11.3, 811.0], [11.4, 811.0], [11.5, 812.0], [11.6, 814.0], [11.7, 814.0], [11.8, 815.0], [11.9, 816.0], [12.0, 817.0], [12.1, 818.0], [12.2, 819.0], [12.3, 820.0], [12.4, 820.0], [12.5, 822.0], [12.6, 822.0], [12.7, 823.0], [12.8, 823.0], [12.9, 823.0], [13.0, 826.0], [13.1, 826.0], [13.2, 826.0], [13.3, 826.0], [13.4, 827.0], [13.5, 827.0], [13.6, 827.0], [13.7, 827.0], [13.8, 828.0], [13.9, 828.0], [14.0, 828.0], [14.1, 828.0], [14.2, 829.0], [14.3, 830.0], [14.4, 830.0], [14.5, 831.0], [14.6, 831.0], [14.7, 831.0], [14.8, 831.0], [14.9, 831.0], [15.0, 832.0], [15.1, 832.0], [15.2, 833.0], [15.3, 833.0], [15.4, 834.0], [15.5, 834.0], [15.6, 835.0], [15.7, 835.0], [15.8, 835.0], [15.9, 835.0], [16.0, 836.0], [16.1, 836.0], [16.2, 836.0], [16.3, 837.0], [16.4, 837.0], [16.5, 838.0], [16.6, 839.0], [16.7, 839.0], [16.8, 839.0], [16.9, 840.0], [17.0, 841.0], [17.1, 842.0], [17.2, 843.0], [17.3, 843.0], [17.4, 843.0], [17.5, 843.0], [17.6, 844.0], [17.7, 845.0], [17.8, 845.0], [17.9, 845.0], [18.0, 845.0], [18.1, 845.0], [18.2, 847.0], [18.3, 847.0], [18.4, 847.0], [18.5, 848.0], [18.6, 848.0], [18.7, 848.0], [18.8, 849.0], [18.9, 849.0], [19.0, 850.0], [19.1, 850.0], [19.2, 851.0], [19.3, 851.0], [19.4, 851.0], [19.5, 852.0], [19.6, 853.0], [19.7, 853.0], [19.8, 854.0], [19.9, 854.0], [20.0, 854.0], [20.1, 854.0], [20.2, 855.0], [20.3, 855.0], [20.4, 855.0], [20.5, 855.0], [20.6, 856.0], [20.7, 856.0], [20.8, 857.0], [20.9, 857.0], [21.0, 857.0], [21.1, 858.0], [21.2, 858.0], [21.3, 858.0], [21.4, 858.0], [21.5, 858.0], [21.6, 859.0], [21.7, 860.0], [21.8, 860.0], [21.9, 860.0], [22.0, 860.0], [22.1, 860.0], [22.2, 861.0], [22.3, 861.0], [22.4, 861.0], [22.5, 862.0], [22.6, 862.0], [22.7, 862.0], [22.8, 862.0], [22.9, 862.0], [23.0, 862.0], [23.1, 862.0], [23.2, 862.0], [23.3, 862.0], [23.4, 862.0], [23.5, 863.0], [23.6, 864.0], [23.7, 864.0], [23.8, 864.0], [23.9, 865.0], [24.0, 865.0], [24.1, 865.0], [24.2, 865.0], [24.3, 865.0], [24.4, 865.0], [24.5, 866.0], [24.6, 866.0], [24.7, 866.0], [24.8, 866.0], [24.9, 866.0], [25.0, 866.0], [25.1, 866.0], [25.2, 867.0], [25.3, 867.0], [25.4, 868.0], [25.5, 868.0], [25.6, 868.0], [25.7, 869.0], [25.8, 869.0], [25.9, 869.0], [26.0, 869.0], [26.1, 870.0], [26.2, 870.0], [26.3, 871.0], [26.4, 871.0], [26.5, 871.0], [26.6, 871.0], [26.7, 871.0], [26.8, 871.0], [26.9, 871.0], [27.0, 872.0], [27.1, 872.0], [27.2, 872.0], [27.3, 872.0], [27.4, 872.0], [27.5, 872.0], [27.6, 873.0], [27.7, 874.0], [27.8, 874.0], [27.9, 875.0], [28.0, 875.0], [28.1, 875.0], [28.2, 875.0], [28.3, 876.0], [28.4, 876.0], [28.5, 877.0], [28.6, 877.0], [28.7, 877.0], [28.8, 878.0], [28.9, 878.0], [29.0, 878.0], [29.1, 878.0], [29.2, 878.0], [29.3, 878.0], [29.4, 878.0], [29.5, 879.0], [29.6, 879.0], [29.7, 879.0], [29.8, 879.0], [29.9, 879.0], [30.0, 879.0], [30.1, 879.0], [30.2, 879.0], [30.3, 879.0], [30.4, 880.0], [30.5, 880.0], [30.6, 880.0], [30.7, 880.0], [30.8, 880.0], [30.9, 881.0], [31.0, 882.0], [31.1, 882.0], [31.2, 882.0], [31.3, 882.0], [31.4, 882.0], [31.5, 883.0], [31.6, 883.0], [31.7, 883.0], [31.8, 883.0], [31.9, 884.0], [32.0, 884.0], [32.1, 884.0], [32.2, 884.0], [32.3, 884.0], [32.4, 885.0], [32.5, 885.0], [32.6, 885.0], [32.7, 885.0], [32.8, 886.0], [32.9, 886.0], [33.0, 886.0], [33.1, 886.0], [33.2, 886.0], [33.3, 886.0], [33.4, 886.0], [33.5, 887.0], [33.6, 887.0], [33.7, 887.0], [33.8, 887.0], [33.9, 888.0], [34.0, 888.0], [34.1, 889.0], [34.2, 889.0], [34.3, 889.0], [34.4, 889.0], [34.5, 889.0], [34.6, 889.0], [34.7, 890.0], [34.8, 890.0], [34.9, 890.0], [35.0, 890.0], [35.1, 891.0], [35.2, 892.0], [35.3, 892.0], [35.4, 892.0], [35.5, 892.0], [35.6, 892.0], [35.7, 893.0], [35.8, 893.0], [35.9, 893.0], [36.0, 893.0], [36.1, 893.0], [36.2, 893.0], [36.3, 894.0], [36.4, 894.0], [36.5, 894.0], [36.6, 894.0], [36.7, 894.0], [36.8, 895.0], [36.9, 895.0], [37.0, 895.0], [37.1, 895.0], [37.2, 896.0], [37.3, 896.0], [37.4, 896.0], [37.5, 897.0], [37.6, 897.0], [37.7, 897.0], [37.8, 897.0], [37.9, 897.0], [38.0, 897.0], [38.1, 898.0], [38.2, 898.0], [38.3, 898.0], [38.4, 899.0], [38.5, 899.0], [38.6, 899.0], [38.7, 899.0], [38.8, 899.0], [38.9, 900.0], [39.0, 900.0], [39.1, 900.0], [39.2, 900.0], [39.3, 900.0], [39.4, 900.0], [39.5, 901.0], [39.6, 901.0], [39.7, 901.0], [39.8, 901.0], [39.9, 902.0], [40.0, 902.0], [40.1, 902.0], [40.2, 902.0], [40.3, 902.0], [40.4, 903.0], [40.5, 903.0], [40.6, 903.0], [40.7, 904.0], [40.8, 904.0], [40.9, 904.0], [41.0, 904.0], [41.1, 904.0], [41.2, 905.0], [41.3, 906.0], [41.4, 906.0], [41.5, 906.0], [41.6, 906.0], [41.7, 906.0], [41.8, 906.0], [41.9, 907.0], [42.0, 907.0], [42.1, 907.0], [42.2, 907.0], [42.3, 908.0], [42.4, 908.0], [42.5, 908.0], [42.6, 908.0], [42.7, 908.0], [42.8, 908.0], [42.9, 908.0], [43.0, 908.0], [43.1, 908.0], [43.2, 908.0], [43.3, 908.0], [43.4, 908.0], [43.5, 908.0], [43.6, 908.0], [43.7, 908.0], [43.8, 908.0], [43.9, 909.0], [44.0, 909.0], [44.1, 909.0], [44.2, 909.0], [44.3, 909.0], [44.4, 909.0], [44.5, 909.0], [44.6, 909.0], [44.7, 909.0], [44.8, 909.0], [44.9, 909.0], [45.0, 909.0], [45.1, 909.0], [45.2, 909.0], [45.3, 909.0], [45.4, 909.0], [45.5, 909.0], [45.6, 909.0], [45.7, 910.0], [45.8, 910.0], [45.9, 910.0], [46.0, 910.0], [46.1, 910.0], [46.2, 910.0], [46.3, 910.0], [46.4, 910.0], [46.5, 910.0], [46.6, 910.0], [46.7, 910.0], [46.8, 910.0], [46.9, 910.0], [47.0, 910.0], [47.1, 910.0], [47.2, 911.0], [47.3, 911.0], [47.4, 911.0], [47.5, 911.0], [47.6, 911.0], [47.7, 911.0], [47.8, 911.0], [47.9, 911.0], [48.0, 911.0], [48.1, 911.0], [48.2, 911.0], [48.3, 911.0], [48.4, 911.0], [48.5, 912.0], [48.6, 912.0], [48.7, 912.0], [48.8, 912.0], [48.9, 912.0], [49.0, 912.0], [49.1, 912.0], [49.2, 912.0], [49.3, 912.0], [49.4, 912.0], [49.5, 912.0], [49.6, 912.0], [49.7, 912.0], [49.8, 912.0], [49.9, 912.0], [50.0, 912.0], [50.1, 913.0], [50.2, 913.0], [50.3, 913.0], [50.4, 913.0], [50.5, 913.0], [50.6, 913.0], [50.7, 913.0], [50.8, 913.0], [50.9, 913.0], [51.0, 913.0], [51.1, 913.0], [51.2, 913.0], [51.3, 913.0], [51.4, 913.0], [51.5, 914.0], [51.6, 914.0], [51.7, 914.0], [51.8, 914.0], [51.9, 914.0], [52.0, 914.0], [52.1, 914.0], [52.2, 914.0], [52.3, 914.0], [52.4, 914.0], [52.5, 914.0], [52.6, 914.0], [52.7, 914.0], [52.8, 915.0], [52.9, 915.0], [53.0, 915.0], [53.1, 915.0], [53.2, 915.0], [53.3, 915.0], [53.4, 915.0], [53.5, 915.0], [53.6, 915.0], [53.7, 915.0], [53.8, 915.0], [53.9, 915.0], [54.0, 915.0], [54.1, 915.0], [54.2, 915.0], [54.3, 915.0], [54.4, 915.0], [54.5, 915.0], [54.6, 915.0], [54.7, 916.0], [54.8, 916.0], [54.9, 916.0], [55.0, 916.0], [55.1, 917.0], [55.2, 917.0], [55.3, 917.0], [55.4, 917.0], [55.5, 917.0], [55.6, 917.0], [55.7, 917.0], [55.8, 917.0], [55.9, 917.0], [56.0, 917.0], [56.1, 917.0], [56.2, 917.0], [56.3, 918.0], [56.4, 918.0], [56.5, 919.0], [56.6, 919.0], [56.7, 919.0], [56.8, 919.0], [56.9, 919.0], [57.0, 920.0], [57.1, 920.0], [57.2, 920.0], [57.3, 920.0], [57.4, 921.0], [57.5, 921.0], [57.6, 921.0], [57.7, 921.0], [57.8, 921.0], [57.9, 922.0], [58.0, 922.0], [58.1, 922.0], [58.2, 922.0], [58.3, 923.0], [58.4, 923.0], [58.5, 923.0], [58.6, 924.0], [58.7, 924.0], [58.8, 924.0], [58.9, 925.0], [59.0, 925.0], [59.1, 926.0], [59.2, 926.0], [59.3, 926.0], [59.4, 927.0], [59.5, 927.0], [59.6, 927.0], [59.7, 928.0], [59.8, 928.0], [59.9, 928.0], [60.0, 929.0], [60.1, 929.0], [60.2, 929.0], [60.3, 930.0], [60.4, 930.0], [60.5, 930.0], [60.6, 931.0], [60.7, 931.0], [60.8, 931.0], [60.9, 931.0], [61.0, 932.0], [61.1, 932.0], [61.2, 932.0], [61.3, 934.0], [61.4, 934.0], [61.5, 935.0], [61.6, 936.0], [61.7, 936.0], [61.8, 937.0], [61.9, 937.0], [62.0, 937.0], [62.1, 937.0], [62.2, 938.0], [62.3, 939.0], [62.4, 939.0], [62.5, 939.0], [62.6, 940.0], [62.7, 940.0], [62.8, 941.0], [62.9, 942.0], [63.0, 942.0], [63.1, 943.0], [63.2, 943.0], [63.3, 944.0], [63.4, 944.0], [63.5, 945.0], [63.6, 945.0], [63.7, 946.0], [63.8, 946.0], [63.9, 946.0], [64.0, 947.0], [64.1, 948.0], [64.2, 949.0], [64.3, 949.0], [64.4, 950.0], [64.5, 950.0], [64.6, 951.0], [64.7, 952.0], [64.8, 953.0], [64.9, 953.0], [65.0, 956.0], [65.1, 956.0], [65.2, 957.0], [65.3, 958.0], [65.4, 959.0], [65.5, 959.0], [65.6, 959.0], [65.7, 961.0], [65.8, 961.0], [65.9, 962.0], [66.0, 962.0], [66.1, 962.0], [66.2, 963.0], [66.3, 964.0], [66.4, 965.0], [66.5, 969.0], [66.6, 969.0], [66.7, 970.0], [66.8, 970.0], [66.9, 971.0], [67.0, 971.0], [67.1, 972.0], [67.2, 973.0], [67.3, 973.0], [67.4, 973.0], [67.5, 976.0], [67.6, 976.0], [67.7, 976.0], [67.8, 977.0], [67.9, 977.0], [68.0, 984.0], [68.1, 985.0], [68.2, 986.0], [68.3, 986.0], [68.4, 987.0], [68.5, 988.0], [68.6, 989.0], [68.7, 990.0], [68.8, 990.0], [68.9, 991.0], [69.0, 992.0], [69.1, 994.0], [69.2, 994.0], [69.3, 995.0], [69.4, 996.0], [69.5, 997.0], [69.6, 997.0], [69.7, 998.0], [69.8, 999.0], [69.9, 1001.0], [70.0, 1002.0], [70.1, 1003.0], [70.2, 1004.0], [70.3, 1004.0], [70.4, 1004.0], [70.5, 1005.0], [70.6, 1006.0], [70.7, 1006.0], [70.8, 1006.0], [70.9, 1007.0], [71.0, 1008.0], [71.1, 1008.0], [71.2, 1009.0], [71.3, 1009.0], [71.4, 1009.0], [71.5, 1009.0], [71.6, 1009.0], [71.7, 1009.0], [71.8, 1010.0], [71.9, 1010.0], [72.0, 1010.0], [72.1, 1010.0], [72.2, 1011.0], [72.3, 1012.0], [72.4, 1013.0], [72.5, 1014.0], [72.6, 1014.0], [72.7, 1014.0], [72.8, 1014.0], [72.9, 1015.0], [73.0, 1016.0], [73.1, 1017.0], [73.2, 1017.0], [73.3, 1017.0], [73.4, 1017.0], [73.5, 1018.0], [73.6, 1019.0], [73.7, 1019.0], [73.8, 1019.0], [73.9, 1020.0], [74.0, 1020.0], [74.1, 1021.0], [74.2, 1021.0], [74.3, 1022.0], [74.4, 1022.0], [74.5, 1023.0], [74.6, 1024.0], [74.7, 1024.0], [74.8, 1024.0], [74.9, 1025.0], [75.0, 1025.0], [75.1, 1025.0], [75.2, 1026.0], [75.3, 1026.0], [75.4, 1026.0], [75.5, 1027.0], [75.6, 1028.0], [75.7, 1028.0], [75.8, 1029.0], [75.9, 1029.0], [76.0, 1029.0], [76.1, 1030.0], [76.2, 1030.0], [76.3, 1030.0], [76.4, 1031.0], [76.5, 1032.0], [76.6, 1033.0], [76.7, 1033.0], [76.8, 1033.0], [76.9, 1033.0], [77.0, 1033.0], [77.1, 1034.0], [77.2, 1034.0], [77.3, 1034.0], [77.4, 1034.0], [77.5, 1034.0], [77.6, 1035.0], [77.7, 1035.0], [77.8, 1036.0], [77.9, 1037.0], [78.0, 1038.0], [78.1, 1038.0], [78.2, 1038.0], [78.3, 1038.0], [78.4, 1039.0], [78.5, 1039.0], [78.6, 1040.0], [78.7, 1040.0], [78.8, 1040.0], [78.9, 1040.0], [79.0, 1041.0], [79.1, 1041.0], [79.2, 1041.0], [79.3, 1041.0], [79.4, 1041.0], [79.5, 1042.0], [79.6, 1043.0], [79.7, 1044.0], [79.8, 1044.0], [79.9, 1045.0], [80.0, 1045.0], [80.1, 1045.0], [80.2, 1045.0], [80.3, 1045.0], [80.4, 1045.0], [80.5, 1045.0], [80.6, 1046.0], [80.7, 1046.0], [80.8, 1046.0], [80.9, 1046.0], [81.0, 1047.0], [81.1, 1047.0], [81.2, 1048.0], [81.3, 1048.0], [81.4, 1048.0], [81.5, 1049.0], [81.6, 1049.0], [81.7, 1049.0], [81.8, 1050.0], [81.9, 1050.0], [82.0, 1050.0], [82.1, 1051.0], [82.2, 1051.0], [82.3, 1052.0], [82.4, 1052.0], [82.5, 1053.0], [82.6, 1053.0], [82.7, 1053.0], [82.8, 1054.0], [82.9, 1054.0], [83.0, 1054.0], [83.1, 1055.0], [83.2, 1055.0], [83.3, 1056.0], [83.4, 1056.0], [83.5, 1056.0], [83.6, 1056.0], [83.7, 1056.0], [83.8, 1056.0], [83.9, 1057.0], [84.0, 1059.0], [84.1, 1060.0], [84.2, 1060.0], [84.3, 1061.0], [84.4, 1062.0], [84.5, 1062.0], [84.6, 1065.0], [84.7, 1065.0], [84.8, 1066.0], [84.9, 1067.0], [85.0, 1067.0], [85.1, 1068.0], [85.2, 1068.0], [85.3, 1069.0], [85.4, 1070.0], [85.5, 1070.0], [85.6, 1071.0], [85.7, 1071.0], [85.8, 1074.0], [85.9, 1077.0], [86.0, 1078.0], [86.1, 1079.0], [86.2, 1079.0], [86.3, 1079.0], [86.4, 1080.0], [86.5, 1081.0], [86.6, 1081.0], [86.7, 1081.0], [86.8, 1085.0], [86.9, 1086.0], [87.0, 1088.0], [87.1, 1088.0], [87.2, 1090.0], [87.3, 1094.0], [87.4, 1097.0], [87.5, 1099.0], [87.6, 1100.0], [87.7, 1101.0], [87.8, 1101.0], [87.9, 1101.0], [88.0, 1103.0], [88.1, 1103.0], [88.2, 1104.0], [88.3, 1105.0], [88.4, 1105.0], [88.5, 1106.0], [88.6, 1107.0], [88.7, 1108.0], [88.8, 1111.0], [88.9, 1115.0], [89.0, 1117.0], [89.1, 1117.0], [89.2, 1118.0], [89.3, 1118.0], [89.4, 1118.0], [89.5, 1118.0], [89.6, 1119.0], [89.7, 1120.0], [89.8, 1121.0], [89.9, 1122.0], [90.0, 1125.0], [90.1, 1126.0], [90.2, 1127.0], [90.3, 1129.0], [90.4, 1129.0], [90.5, 1131.0], [90.6, 1132.0], [90.7, 1133.0], [90.8, 1133.0], [90.9, 1134.0], [91.0, 1140.0], [91.1, 1140.0], [91.2, 1140.0], [91.3, 1141.0], [91.4, 1143.0], [91.5, 1145.0], [91.6, 1147.0], [91.7, 1149.0], [91.8, 1150.0], [91.9, 1155.0], [92.0, 1157.0], [92.1, 1169.0], [92.2, 1176.0], [92.3, 1176.0], [92.4, 1197.0], [92.5, 1200.0], [92.6, 1203.0], [92.7, 1204.0], [92.8, 1205.0], [92.9, 1206.0], [93.0, 1208.0], [93.1, 1211.0], [93.2, 1212.0], [93.3, 1214.0], [93.4, 1214.0], [93.5, 1214.0], [93.6, 1216.0], [93.7, 1222.0], [93.8, 1222.0], [93.9, 1223.0], [94.0, 1229.0], [94.1, 1249.0], [94.2, 1308.0], [94.3, 1323.0], [94.4, 1328.0], [94.5, 1330.0], [94.6, 1343.0], [94.7, 1346.0], [94.8, 1387.0], [94.9, 1400.0], [95.0, 1407.0], [95.1, 1454.0], [95.2, 1513.0], [95.3, 1647.0], [95.4, 1814.0], [95.5, 1865.0], [95.6, 2031.0], [95.7, 2064.0], [95.8, 2076.0], [95.9, 2110.0], [96.0, 2251.0], [96.1, 2317.0], [96.2, 2410.0], [96.3, 2530.0], [96.4, 2688.0], [96.5, 8257.0], [96.6, 8330.0], [96.7, 8337.0], [96.8, 8339.0], [96.9, 8369.0], [97.0, 8371.0], [97.1, 8379.0], [97.2, 8399.0], [97.3, 8405.0], [97.4, 8411.0], [97.5, 8414.0], [97.6, 8414.0], [97.7, 8472.0], [97.8, 8590.0], [97.9, 8591.0], [98.0, 8604.0], [98.1, 8617.0], [98.2, 8624.0], [98.3, 8627.0], [98.4, 8627.0], [98.5, 8642.0], [98.6, 8651.0], [98.7, 8722.0], [98.8, 8758.0], [98.9, 8803.0], [99.0, 8853.0], [99.1, 8983.0], [99.2, 9133.0], [99.3, 9432.0], [99.4, 9726.0], [99.5, 9937.0], [99.6, 10229.0], [99.7, 10440.0], [99.8, 10922.0], [99.9, 10932.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 639.0, "series": [{"data": [[8200.0, 3.0], [8500.0, 1.0], [8300.0, 1.0], [8600.0, 2.0], [8700.0, 2.0], [8400.0, 1.0], [600.0, 3.0], [700.0, 3.0], [800.0, 2.0], [1000.0, 2.0], [1300.0, 1.0], [1400.0, 1.0], [100.0, 3.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 2.0], [200.0, 639.0], [300.0, 260.0], [400.0, 28.0], [7500.0, 2.0], [7600.0, 1.0], [7700.0, 4.0], [7800.0, 6.0], [7900.0, 12.0], [8000.0, 8.0], [8100.0, 8.0], [500.0, 3.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[600.0, 314.0], [700.0, 44.0], [800.0, 5.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4300.0, 1.0], [4600.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 2.0], [5500.0, 1.0], [5400.0, 2.0], [5900.0, 3.0], [6000.0, 1.0], [6200.0, 2.0], [6400.0, 2.0], [6700.0, 2.0], [7000.0, 2.0], [7300.0, 1.0], [9500.0, 1.0], [9800.0, 1.0], [9900.0, 3.0], [10000.0, 1.0], [10300.0, 1.0], [10700.0, 1.0], [11200.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [11600.0, 3.0], [11300.0, 3.0], [11500.0, 5.0], [11400.0, 1.0], [11700.0, 3.0], [11900.0, 1.0], [12000.0, 1.0], [11800.0, 3.0], [12300.0, 6.0], [12400.0, 2.0], [12500.0, 1.0], [12600.0, 1.0], [12900.0, 1.0], [13100.0, 5.0], [13200.0, 2.0], [13000.0, 3.0], [12800.0, 1.0], [13300.0, 2.0], [13500.0, 3.0], [13800.0, 4.0], [13700.0, 4.0], [13600.0, 3.0], [13400.0, 2.0], [14100.0, 2.0], [14200.0, 2.0], [14000.0, 1.0], [13900.0, 1.0], [14300.0, 1.0], [14500.0, 2.0], [14700.0, 2.0], [14600.0, 1.0], [14400.0, 1.0], [15200.0, 1.0], [14900.0, 1.0], [500.0, 497.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[8400.0, 1.0], [600.0, 2.0], [700.0, 3.0], [900.0, 1.0], [1200.0, 1.0], [1400.0, 1.0], [100.0, 499.0], [1700.0, 1.0], [1800.0, 2.0], [200.0, 378.0], [300.0, 54.0], [400.0, 1.0], [6900.0, 1.0], [7100.0, 2.0], [7000.0, 1.0], [7300.0, 21.0], [7400.0, 5.0], [7200.0, 1.0], [7500.0, 8.0], [7600.0, 10.0], [7800.0, 3.0], [7900.0, 1.0], [7700.0, 1.0], [8000.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[8600.0, 7.0], [8300.0, 7.0], [8200.0, 1.0], [8400.0, 5.0], [8700.0, 2.0], [8500.0, 2.0], [9100.0, 1.0], [8900.0, 1.0], [8800.0, 2.0], [9700.0, 1.0], [9400.0, 1.0], [9900.0, 1.0], [10200.0, 1.0], [10400.0, 1.0], [10900.0, 2.0], [700.0, 91.0], [800.0, 298.0], [900.0, 310.0], [1000.0, 177.0], [1100.0, 49.0], [1200.0, 17.0], [1300.0, 7.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 1.0], [1800.0, 2.0], [2000.0, 3.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 289.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1862.0, "series": [{"data": [[0.0, 1862.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1849.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 289.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.597014925373133, "minX": 1.63773936E12, "maxY": 83.34868421052627, "series": [{"data": [[1.6377396E12, 6.823308270676691], [1.63773948E12, 7.250941028858217], [1.63773966E12, 6.597014925373133], [1.63773936E12, 83.34868421052627], [1.63773954E12, 6.848447204968938], [1.63773942E12, 21.379812695109237]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63773966E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 145.0, "minX": 1.0, "maxY": 14714.0, "series": [{"data": [[2.0, 415.0], [3.0, 305.0], [4.0, 252.0], [5.0, 199.0], [6.0, 234.8026315789474], [7.0, 280.21880998080655], [8.0, 365.6995305164319], [9.0, 560.4871794871796], [10.0, 1212.6000000000001], [11.0, 3001.666666666667], [12.0, 4151.0], [13.0, 4026.5], [14.0, 8144.0], [15.0, 4007.5], [16.0, 8192.0], [17.0, 8084.0], [18.0, 8239.0], [19.0, 4076.0], [20.0, 287.0], [21.0, 7983.5], [22.0, 288.0], [23.0, 8371.5], [24.0, 275.0], [25.0, 4085.5], [26.0, 271.0], [27.0, 7709.0], [28.0, 8120.0], [29.0, 253.0], [30.0, 8735.0], [31.0, 306.0], [33.0, 8201.0], [32.0, 425.0], [35.0, 343.0], [34.0, 329.0], [37.0, 235.0], [36.0, 378.0], [39.0, 284.0], [38.0, 329.0], [41.0, 7971.0], [40.0, 313.0], [43.0, 307.0], [42.0, 266.0], [45.0, 297.0], [44.0, 7806.0], [47.0, 280.0], [46.0, 8750.0], [49.0, 273.0], [48.0, 343.0], [51.0, 324.0], [50.0, 8101.0], [53.0, 284.0], [52.0, 259.0], [55.0, 370.0], [54.0, 7895.0], [57.0, 356.5], [56.0, 274.0], [59.0, 269.0], [58.0, 246.0], [61.0, 268.0], [60.0, 265.0], [63.0, 256.0], [62.0, 284.0], [67.0, 326.0], [66.0, 267.0], [65.0, 267.0], [64.0, 245.5], [70.0, 279.0], [69.0, 309.0], [68.0, 288.0], [75.0, 8300.0], [74.0, 8162.0], [73.0, 8648.0], [72.0, 2812.6666666666665], [79.0, 8073.0], [78.0, 7909.0], [77.0, 382.0], [76.0, 4232.5], [83.0, 7993.0], [82.0, 262.0], [81.0, 304.0], [80.0, 313.0], [87.0, 7966.0], [86.0, 7963.0], [85.0, 7859.0], [84.0, 7999.0], [91.0, 288.0], [88.0, 7940.0], [95.0, 265.0], [94.0, 283.3333333333333], [92.0, 2832.0], [99.0, 256.0], [98.0, 305.5], [97.0, 311.0], [96.0, 8083.0], [102.0, 241.0], [101.0, 250.0], [100.0, 450.0], [107.0, 324.5], [106.0, 301.0], [105.0, 379.0], [104.0, 292.3333333333333], [111.0, 7887.0], [110.0, 415.0], [109.0, 262.5], [108.0, 4179.0], [115.0, 4456.0], [114.0, 8029.0], [113.0, 269.0], [112.0, 4091.5], [116.0, 3372.6], [1.0, 469.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[14.92699999999997, 683.3670000000006]], "isOverall": false, "label": "Get aws/sts-Aggregated", "isController": false}, {"data": [[2.0, 616.5], [3.0, 615.0], [4.0, 565.0], [5.0, 547.8461538461539], [6.0, 580.0098684210529], [7.0, 588.4405063291143], [8.0, 652.8899082568805], [9.0, 766.7222222222221], [10.0, 679.3333333333334], [11.0, 777.3333333333334], [12.0, 577.0], [15.0, 562.0], [19.0, 556.0], [20.0, 545.0], [21.0, 610.0], [24.0, 568.0], [27.0, 660.0], [28.0, 952.5], [33.0, 1469.0], [38.0, 1029.0], [43.0, 2406.5], [45.0, 3185.5], [47.0, 3889.0], [48.0, 12495.0], [51.0, 5470.0], [55.0, 4084.0], [54.0, 8964.5], [58.0, 13814.0], [60.0, 12482.0], [63.0, 9361.0], [65.0, 11808.5], [71.0, 8663.0], [69.0, 14542.0], [75.0, 9363.0], [74.0, 4155.0], [73.0, 12465.5], [72.0, 14714.0], [79.0, 13003.0], [88.0, 7376.0], [91.0, 5401.0], [92.0, 1340.0], [94.0, 9582.0], [95.0, 12242.666666666666], [96.0, 9376.125], [97.0, 14452.5], [100.0, 8798.333333333334], [101.0, 11749.1], [102.0, 11113.0], [103.0, 12732.0], [104.0, 12154.6], [105.0, 13743.6], [106.0, 11023.6], [107.0, 10787.666666666666], [108.0, 11954.333333333334], [109.0, 11665.0], [110.0, 9523.25], [111.0, 10316.666666666666], [112.0, 12389.5], [113.0, 13296.333333333334], [114.0, 10543.333333333334], [115.0, 11764.800000000001], [116.0, 8745.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[17.58199999999999, 1802.666000000003]], "isOverall": false, "label": "Get Phos-Aggregated", "isController": false}, {"data": [[3.0, 205.0], [4.0, 305.0], [5.0, 168.75], [6.0, 197.16725978647685], [7.0, 207.1738095238097], [8.0, 225.28688524590163], [9.0, 279.3478260869565], [10.0, 450.4285714285714], [12.0, 301.0], [13.0, 157.0], [15.0, 179.0], [18.0, 179.0], [20.0, 165.0], [23.0, 145.0], [24.0, 166.5], [27.0, 162.0], [29.0, 174.0], [43.0, 147.0], [45.0, 258.0], [55.0, 166.0], [62.0, 7359.0], [63.0, 5038.166666666667], [64.0, 4666.2], [65.0, 5145.0], [66.0, 5651.5], [67.0, 193.5], [68.0, 7367.333333333333], [69.0, 5836.75], [70.0, 2598.333333333333], [71.0, 5577.25], [72.0, 4551.6], [73.0, 240.5], [74.0, 5467.5], [75.0, 7394.0], [76.0, 5637.0], [77.0, 3942.0], [78.0, 2613.6666666666665], [79.0, 7485.666666666667], [80.0, 5632.25], [81.0, 3944.0], [82.0, 3906.0], [83.0, 4653.0], [84.0, 7577.0], [85.0, 4668.2], [86.0, 259.0], [87.0, 7574.0], [88.0, 2247.25], [89.0, 181.0], [91.0, 304.0], [92.0, 206.0], [94.0, 258.0], [95.0, 305.0], [96.0, 181.0], [97.0, 193.5], [99.0, 307.0], [100.0, 182.0], [101.0, 193.0], [103.0, 240.0], [105.0, 216.5], [106.0, 300.0], [107.0, 195.0], [104.0, 218.0], [108.0, 236.5], [109.0, 215.0], [110.0, 289.0], [111.0, 211.0], [112.0, 212.0], [113.0, 305.5], [114.0, 213.0], [115.0, 199.4], [116.0, 201.5]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[16.85299999999997, 619.1730000000003]], "isOverall": false, "label": "Get Covid Exposure site-Aggregated", "isController": false}, {"data": [[4.0, 1019.0], [5.0, 856.3750000000001], [6.0, 869.6865079365076], [7.0, 964.9463087248323], [8.0, 1009.628318584071], [9.0, 1000.1818181818181], [10.0, 1234.0], [11.0, 879.6666666666666], [15.0, 749.0], [16.0, 784.0], [19.0, 791.0], [21.0, 785.0], [23.0, 767.0], [24.0, 839.0], [25.0, 883.0], [29.0, 908.0], [37.0, 9154.0], [36.0, 914.0], [38.0, 10044.42857142857], [39.0, 5979.333333333333], [40.0, 958.0], [41.0, 4741.0], [42.0, 997.0], [43.0, 6099.666666666667], [44.0, 3399.0], [45.0, 944.0], [46.0, 6725.0], [47.0, 4670.0], [48.0, 1006.0], [49.0, 4867.0], [51.0, 5571.0], [52.0, 1133.0], [53.0, 4873.0], [54.0, 922.5], [55.0, 6716.0], [56.0, 943.0], [57.0, 5938.333333333333], [58.0, 4777.5], [59.0, 1081.0], [60.0, 2849.75], [62.0, 6102.0], [63.0, 4671.0], [64.0, 920.5], [65.0, 1078.0], [66.0, 986.0], [67.0, 914.0], [68.0, 946.0], [69.0, 1129.0], [70.0, 942.0], [71.0, 968.0], [72.0, 1071.0], [73.0, 917.0], [74.0, 952.0], [75.0, 956.5], [76.0, 999.0], [77.0, 971.0], [79.0, 984.0], [80.0, 1132.0], [81.0, 1140.0], [82.0, 1145.0], [83.0, 956.0], [84.0, 958.0], [86.0, 914.0], [87.0, 1080.0], [88.0, 920.0], [89.0, 915.0], [90.0, 1100.0], [91.0, 1107.0], [92.0, 907.0], [93.0, 1169.0], [94.0, 1026.0], [95.0, 1034.0], [96.0, 941.5], [98.0, 1055.0], [99.0, 1565.0], [100.0, 966.0], [102.0, 957.5], [103.0, 912.0], [104.0, 1200.0], [105.0, 1021.0], [106.0, 1028.0], [107.0, 939.0], [108.0, 1118.0], [109.0, 923.0], [110.0, 990.0], [111.0, 1086.0], [112.0, 945.0], [113.0, 881.0], [114.0, 886.0], [115.0, 839.75], [116.0, 749.0]], "isOverall": false, "label": "Login  Request", "isController": false}, {"data": [[15.468999999999985, 1226.0459999999985]], "isOverall": false, "label": "Login  Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 116.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2489.1666666666665, "minX": 1.63773936E12, "maxY": 38506.03333333333, "series": [{"data": [[1.6377396E12, 30229.933333333334], [1.63773948E12, 30105.25], [1.63773966E12, 12810.25], [1.63773936E12, 9191.666666666666], [1.63773954E12, 30423.533333333333], [1.63773942E12, 38506.03333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6377396E12, 6268.816666666667], [1.63773948E12, 6261.7], [1.63773966E12, 2627.733333333333], [1.63773936E12, 2489.1666666666665], [1.63773954E12, 6321.416666666667], [1.63773942E12, 7447.833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63773966E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 193.77499999999995, "minX": 1.63773936E12, "maxY": 10755.896551724138, "series": [{"data": [[1.6377396E12, 274.92964824120605], [1.63773948E12, 297.31818181818187], [1.63773966E12, 278.19767441860455], [1.63773936E12, 4178.5], [1.63773954E12, 293.0445544554456], [1.63773942E12, 1458.6295081967205]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.6377396E12, 593.5549999999998], [1.63773948E12, 623.8743718592964], [1.63773966E12, 583.6823529411766], [1.63773936E12, 10755.896551724138], [1.63773954E12, 579.6915422885573], [1.63773942E12, 2995.451361867703]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.6377396E12, 193.77499999999995], [1.63773948E12, 221.99500000000018], [1.63773966E12, 213.17073170731703], [1.63773936E12, 3679.398305084748], [1.63773954E12, 209.18905472636817], [1.63773942E12, 212.678391959799]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.6377396E12, 935.5929648241205], [1.63773948E12, 981.4450000000002], [1.63773966E12, 916.2195121951218], [1.63773936E12, 3348.025423728811], [1.63773954E12, 927.7412935323387], [1.63773942E12, 934.5050000000005]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63773966E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 193.73000000000008, "minX": 1.63773936E12, "maxY": 10754.034482758618, "series": [{"data": [[1.6377396E12, 274.8793969849245], [1.63773948E12, 297.2828282828283], [1.63773966E12, 278.1279069767442], [1.63773936E12, 4178.5], [1.63773954E12, 292.990099009901], [1.63773942E12, 1458.5770491803287]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.6377396E12, 592.2849999999996], [1.63773948E12, 621.9798994974876], [1.63773966E12, 582.1411764705882], [1.63773936E12, 10754.034482758618], [1.63773954E12, 578.4626865671638], [1.63773942E12, 2994.093385214007]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.6377396E12, 193.73000000000008], [1.63773948E12, 221.94499999999996], [1.63773966E12, 213.08536585365852], [1.63773936E12, 3679.3305084745753], [1.63773954E12, 209.15920398009948], [1.63773942E12, 212.6130653266332]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.6377396E12, 935.5527638190952], [1.63773948E12, 981.3949999999999], [1.63773966E12, 916.2073170731707], [1.63773936E12, 3347.8305084745757], [1.63773954E12, 927.7064676616918], [1.63773942E12, 934.4600000000004]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63773966E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63773936E12, "maxY": 592.8135593220337, "series": [{"data": [[1.6377396E12, 0.0], [1.63773948E12, 0.0], [1.63773966E12, 0.0], [1.63773936E12, 0.0], [1.63773954E12, 0.0], [1.63773942E12, 0.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.6377396E12, 0.0], [1.63773948E12, 0.0], [1.63773966E12, 0.0], [1.63773936E12, 0.0], [1.63773954E12, 0.0], [1.63773942E12, 0.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.6377396E12, 0.0], [1.63773948E12, 0.0], [1.63773966E12, 0.0], [1.63773936E12, 0.0], [1.63773954E12, 0.0], [1.63773942E12, 0.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.6377396E12, 492.7939698492461], [1.63773948E12, 529.14], [1.63773966E12, 499.9268292682926], [1.63773936E12, 592.8135593220337], [1.63773954E12, 489.039800995025], [1.63773942E12, 478.48000000000013]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63773966E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 143.0, "minX": 1.63773936E12, "maxY": 15257.0, "series": [{"data": [[1.6377396E12, 2251.0], [1.63773948E12, 2688.0], [1.63773966E12, 2076.0], [1.63773936E12, 14245.0], [1.63773954E12, 2110.0], [1.63773942E12, 15257.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6377396E12, 917.1], [1.63773948E12, 996.0000000000005], [1.63773966E12, 908.8000000000001], [1.63773936E12, 11582.0], [1.63773954E12, 916.4], [1.63773942E12, 5271.400000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6377396E12, 1328.3999999999996], [1.63773948E12, 1744.2399999999998], [1.63773966E12, 1182.039999999999], [1.63773936E12, 13807.649999999998], [1.63773954E12, 1210.8199999999997], [1.63773942E12, 14250.039999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6377396E12, 1028.05], [1.63773948E12, 1081.3999999999996], [1.63773966E12, 1014.8], [1.63773936E12, 12471.25], [1.63773954E12, 1023.3999999999999], [1.63773942E12, 8180.799999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6377396E12, 144.0], [1.63773948E12, 144.0], [1.63773966E12, 145.0], [1.63773936E12, 157.0], [1.63773954E12, 143.0], [1.63773942E12, 144.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6377396E12, 516.0], [1.63773948E12, 519.0], [1.63773966E12, 528.0], [1.63773936E12, 4135.5], [1.63773954E12, 522.0], [1.63773942E12, 535.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63773966E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 356.0, "minX": 3.0, "maxY": 7378.0, "series": [{"data": [[8.0, 1030.5], [9.0, 549.0], [10.0, 824.0], [11.0, 537.5], [12.0, 534.5], [3.0, 469.0], [51.0, 914.0], [13.0, 517.0], [53.0, 3021.0], [54.0, 5346.5], [14.0, 527.0], [15.0, 528.5], [4.0, 1127.5], [16.0, 356.0], [17.0, 415.0], [18.0, 550.5], [19.0, 519.5], [20.0, 1565.0], [21.0, 809.0], [6.0, 1132.0], [24.0, 7378.0], [7.0, 1088.5], [28.0, 1031.5], [29.0, 564.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 356.0, "minX": 3.0, "maxY": 7378.0, "series": [{"data": [[8.0, 1030.5], [9.0, 548.0], [10.0, 822.5], [11.0, 535.0], [12.0, 533.5], [3.0, 468.0], [51.0, 914.0], [13.0, 516.0], [53.0, 3020.0], [54.0, 5344.5], [14.0, 526.0], [15.0, 527.0], [4.0, 1127.5], [16.0, 356.0], [17.0, 414.5], [18.0, 547.5], [19.0, 518.5], [20.0, 1565.0], [21.0, 809.0], [6.0, 1132.0], [24.0, 7378.0], [7.0, 1088.5], [28.0, 1031.5], [29.0, 561.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 54.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.466666666666667, "minX": 1.63773936E12, "maxY": 14.266666666666667, "series": [{"data": [[1.6377396E12, 13.316666666666666], [1.63773948E12, 13.316666666666666], [1.63773966E12, 5.466666666666667], [1.63773936E12, 6.916666666666667], [1.63773954E12, 13.383333333333333], [1.63773942E12, 14.266666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63773966E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.63773936E12, "maxY": 12.683333333333334, "series": [{"data": [[1.6377396E12, 9.983333333333333], [1.63773948E12, 9.95], [1.63773966E12, 4.216666666666667], [1.63773936E12, 3.1], [1.63773954E12, 10.066666666666666], [1.63773942E12, 12.683333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6377396E12, 3.316666666666667], [1.63773948E12, 3.3333333333333335], [1.63773966E12, 1.3666666666666667], [1.63773936E12, 1.9666666666666666], [1.63773954E12, 3.35], [1.63773942E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63773966E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.63773936E12, "maxY": 5.083333333333333, "series": [{"data": [[1.6377396E12, 3.316666666666667], [1.63773948E12, 3.3333333333333335], [1.63773966E12, 1.3666666666666667], [1.63773936E12, 1.9666666666666666], [1.63773954E12, 3.35], [1.63773942E12, 3.3333333333333335]], "isOverall": false, "label": "Login  Request-success", "isController": false}, {"data": [[1.6377396E12, 3.3333333333333335], [1.63773948E12, 3.3333333333333335], [1.63773966E12, 1.3666666666666667], [1.63773936E12, 1.9666666666666666], [1.63773954E12, 3.35], [1.63773942E12, 3.316666666666667]], "isOverall": false, "label": "Get Covid Exposure site-success", "isController": false}, {"data": [[1.6377396E12, 3.316666666666667], [1.63773948E12, 3.3], [1.63773966E12, 1.4333333333333333], [1.63773936E12, 0.16666666666666666], [1.63773954E12, 3.3666666666666667], [1.63773942E12, 5.083333333333333]], "isOverall": false, "label": "Get aws/sts-success", "isController": false}, {"data": [[1.6377396E12, 3.3333333333333335], [1.63773948E12, 3.316666666666667], [1.63773966E12, 1.4166666666666667], [1.63773936E12, 0.9666666666666667], [1.63773954E12, 3.35], [1.63773942E12, 4.283333333333333]], "isOverall": false, "label": "Get Phos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63773966E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.066666666666666, "minX": 1.63773936E12, "maxY": 16.016666666666666, "series": [{"data": [[1.6377396E12, 13.3], [1.63773948E12, 13.283333333333333], [1.63773966E12, 5.583333333333333], [1.63773936E12, 5.066666666666666], [1.63773954E12, 13.416666666666666], [1.63773942E12, 16.016666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63773966E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

